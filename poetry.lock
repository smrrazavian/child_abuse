[[package]]
name = "adagio"
version = "0.2.4"
description = "The Dag IO Framework for Fugue projects"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
triad = ">=0.6.1"

[[package]]
name = "aiohttp"
version = "3.8.1"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["aiodns", "brotli", "cchardet"]

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "alembic"
version = "1.8.1"
description = "A database migration tool for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
Mako = "*"
SQLAlchemy = ">=1.3.0"

[package.extras]
tz = ["python-dateutil"]

[[package]]
name = "analytics-python"
version = "1.4.0"
description = "The hassle-free way to integrate analytics into any python application."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
backoff = "1.10.0"
monotonic = ">=1.5"
python-dateutil = ">2.1"
requests = ">=2.7,<3.0"
six = ">=1.5"

[package.extras]
test = ["flake8 (==3.7.9)", "pylint (==1.9.3)", "mock (==2.0.0)"]

[[package]]
name = "ansi2html"
version = "1.8.0"
description = ""
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
test = ["pytest-cov", "pytest"]
docs = ["sphinx-rtd-theme", "setuptools-scm", "sphinx"]

[[package]]
name = "antlr4-python3-runtime"
version = "4.10"
description = "ANTLR 4.10 runtime for Python 2.7.12"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "anybadge"
version = "1.9.0"
description = "Simple, flexible badge generator for project badges."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
packaging = "*"

[[package]]
name = "anyio"
version = "3.6.1"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"

[package.extras]
doc = ["packaging", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["coverage[toml] (>=4.5)", "hypothesis (>=4.0)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "contextlib2", "uvloop (<0.15)", "mock (>=4)", "uvloop (>=0.15)"]
trio = ["trio (>=0.16)"]

[[package]]
name = "appdirs"
version = "1.4.4"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "appnope"
version = "0.1.3"
description = "Disable App Nap on macOS >= 10.9"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "argon2-cffi"
version = "21.3.0"
description = "The secure Argon2 password hashing algorithm."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
argon2-cffi-bindings = "*"

[package.extras]
dev = ["pre-commit", "cogapp", "tomli", "coverage[toml] (>=5.0.2)", "hypothesis", "pytest", "sphinx", "sphinx-notfound-page", "furo"]
docs = ["sphinx", "sphinx-notfound-page", "furo"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pytest"]

[[package]]
name = "argon2-cffi-bindings"
version = "21.2.0"
description = "Low-level CFFI bindings for Argon2"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.0.1"

[package.extras]
dev = ["pytest", "cogapp", "pre-commit", "wheel"]
tests = ["pytest"]

[[package]]
name = "astroid"
version = "2.11.7"
description = "An abstract syntax tree for Python with inference support."
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
lazy-object-proxy = ">=1.4.0"
typing-extensions = {version = ">=3.10", markers = "python_version < \"3.10\""}
wrapt = ">=1.11,<2"

[[package]]
name = "asttokens"
version = "2.0.5"
description = "Annotate AST trees with source code positions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
test = ["astroid", "pytest"]

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "21.4.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "autopage"
version = "0.5.1"
description = "A library to provide automatic paging for console output"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "autoviz"
version = "0.1.42"
description = "Automatically Visualize any dataset, any size with a single line of code"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
bokeh = ">=2.4.2"
emoji = "*"
fsspec = ">=0.8.3"
holoviews = ">=1.14.6"
hvplot = ">=0.7.3"
ipython = "*"
jupyter = "*"
matplotlib = ">=3.3.3"
nltk = "*"
numpy = "*"
pandas = "*"
panel = ">=0.12.6,<0.13.0"
pyamg = "*"
scikit-learn = "*"
seaborn = ">=0.11.1"
statsmodels = "*"
textblob = "*"
typing-extensions = ">=4.1.1"
wordcloud = "*"
xgboost = ">=0.82"
xlrd = "*"

[[package]]
name = "azure-core"
version = "1.24.2"
description = "Microsoft Azure Core Library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
requests = ">=2.18.4"
six = ">=1.11.0"
typing-extensions = ">=4.0.1"

[[package]]
name = "azure-storage-blob"
version = "12.13.0"
description = "Microsoft Azure Blob Storage Client Library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
azure-core = ">=1.23.1,<2.0.0"
cryptography = ">=2.1.4"
msrest = ">=0.6.21"

[[package]]
name = "backcall"
version = "0.2.0"
description = "Specifications for callback functions passed in to an API"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "backoff"
version = "1.10.0"
description = "Function decoration for backoff and retry"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "bandit"
version = "1.7.4"
description = "Security oriented static analyser for python code."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
GitPython = ">=1.0.1"
PyYAML = ">=5.3.1"
stevedore = ">=1.20.0"

[package.extras]
test = ["coverage (>=4.5.4)", "fixtures (>=3.0.0)", "flake8 (>=4.0.0)", "stestr (>=2.5.0)", "testscenarios (>=0.5.0)", "testtools (>=2.3.0)", "toml", "beautifulsoup4 (>=4.8.0)", "pylint (==1.9.4)"]
toml = ["toml"]
yaml = ["pyyaml"]

[[package]]
name = "bcrypt"
version = "3.2.2"
description = "Modern password hashing for your software and your servers"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.1"

[package.extras]
tests = ["pytest (>=3.2.1,!=3.3.0)"]
typecheck = ["mypy"]

[[package]]
name = "beautifulsoup4"
version = "4.11.1"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "black"
version = "22.6.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_full_version < \"3.11.0a7\""}
typing-extensions = {version = ">=3.10.0.0", markers = "python_version < \"3.10\""}

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.7.4)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "bleach"
version = "5.0.1"
description = "An easy safelist-based HTML-sanitizing tool."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
six = ">=1.9.0"
webencodings = "*"

[package.extras]
css = ["tinycss2 (>=1.1.0,<1.2)"]
dev = ["build (==0.8.0)", "flake8 (==4.0.1)", "hashin (==0.17.0)", "pip-tools (==6.6.2)", "pytest (==7.1.2)", "Sphinx (==4.3.2)", "tox (==3.25.0)", "twine (==4.0.1)", "wheel (==0.37.1)", "black (==22.3.0)", "mypy (==0.961)"]

[[package]]
name = "blis"
version = "0.7.8"
description = "The Blis BLAS-like linear algebra library, as a self-contained C-extension."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.15.0"

[[package]]
name = "bokeh"
version = "2.4.3"
description = "Interactive plots and applications in the browser from Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Jinja2 = ">=2.9"
numpy = ">=1.11.3"
packaging = ">=16.8"
pillow = ">=7.1.0"
PyYAML = ">=3.10"
tornado = ">=5.1"
typing-extensions = ">=3.10.0"

[[package]]
name = "boruta"
version = "0.3"
description = "Python Implementation of Boruta Feature Selection"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.10.4"
scikit-learn = ">=0.17.1"
scipy = ">=0.17.0"

[[package]]
name = "boto3"
version = "1.24.36"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.27.36,<1.28.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.6.0,<0.7.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "botocore"
version = "1.27.36"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.13.8)"]

[[package]]
name = "brotli"
version = "1.0.9"
description = "Python bindings for the Brotli compression library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "cachetools"
version = "5.2.0"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = "~=3.7"

[[package]]
name = "catalogue"
version = "1.0.0"
description = "Super lightweight function registries for your library"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[[package]]
name = "catboost"
version = "1.0.6"
description = "Catboost Python Package"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
graphviz = "*"
matplotlib = "*"
numpy = ">=1.16.0"
pandas = ">=0.24.0"
plotly = "*"
scipy = "*"
six = "*"

[[package]]
name = "certifi"
version = "2022.6.15"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "cfgv"
version = "3.3.1"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "charset-normalizer"
version = "2.1.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "chart-studio"
version = "1.1.0"
description = "Utilities for interfacing with plotly's Chart Studio"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
plotly = "*"
requests = "*"
retrying = ">=1.3.3"
six = "*"

[[package]]
name = "click"
version = "8.1.3"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "cliff"
version = "3.10.1"
description = "Command Line Interface Formulation Framework"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
autopage = ">=0.4.0"
cmd2 = ">=1.0.0"
pbr = ">=2.0.0,<2.1.0 || >2.1.0"
PrettyTable = ">=0.7.2"
pyparsing = ">=2.1.0"
PyYAML = ">=3.12"
stevedore = ">=2.0.1"

[[package]]
name = "cloudpickle"
version = "2.1.0"
description = "Extended pickling support for Python objects"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cmaes"
version = "0.8.2"
description = "Lightweight Covariance Matrix Adaptation Evolution Strategy (CMA-ES) implementation for Python 3."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = "*"

[[package]]
name = "cmd2"
version = "2.4.2"
description = "cmd2 - quickly build feature-rich and user-friendly interactive command line applications in Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
attrs = ">=16.3.0"
pyperclip = ">=1.6"
pyreadline3 = {version = "*", markers = "sys_platform == \"win32\""}
wcwidth = ">=0.1.7"

[package.extras]
dev = ["codecov", "doc8", "flake8", "invoke", "mypy (==0.902)", "nox", "pytest (>=4.6)", "pytest-cov", "pytest-mock", "sphinx", "sphinx-rtd-theme", "sphinx-autobuild", "twine (>=1.11)"]
test = ["codecov", "coverage", "pytest (>=4.6)", "pytest-cov", "pytest-mock", "gnureadline"]
validate = ["flake8", "mypy (==0.902)", "types-pkg-resources"]

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "colorcet"
version = "3.0.0"
description = "Collection of perceptually uniform colormaps"
category = "main"
optional = false
python-versions = ">=2.7"

[package.dependencies]
param = ">=1.7.0"
pyct = ">=0.4.4"

[package.extras]
tests_extra = ["pytest-mpl", "keyring", "rfc3986", "twine", "pytest-cov", "pytest (>=2.8.5)", "nbsmoke (>=0.2.6)", "flake8"]
tests = ["keyring", "rfc3986", "twine", "pytest-cov", "pytest (>=2.8.5)", "nbsmoke (>=0.2.6)", "flake8"]
examples = ["bokeh", "matplotlib", "holoviews", "numpy"]
doc = ["sphinx-holoviz-theme", "nbsite (>=0.6.1)", "bokeh", "matplotlib", "holoviews", "numpy"]
build = ["wheel", "setuptools (>=30.3.0)", "pyct (>=0.4.4)", "param (>=1.7.0)"]
all = ["wheel", "twine", "sphinx-holoviz-theme", "setuptools (>=30.3.0)", "rfc3986", "pytest-mpl", "pytest-cov", "pytest (>=2.8.5)", "pyct (>=0.4.4)", "param (>=1.7.0)", "numpy", "nbsmoke (>=0.2.6)", "nbsite (>=0.6.1)", "matplotlib", "keyring", "holoviews", "flake8", "bokeh"]

[[package]]
name = "colorlog"
version = "6.6.0"
description = "Add colours to the output of Python's logging module."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[package.extras]
development = ["black", "flake8", "mypy", "pytest", "types-colorama"]

[[package]]
name = "colorlover"
version = "0.3.0"
description = "Color scales for IPython notebook"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "colour"
version = "0.1.5"
description = "converts and manipulates various color representation (HSL, RVB, web, X11, ...)"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["nose"]

[[package]]
name = "coverage"
version = "6.4.2"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tomli = {version = "*", optional = true, markers = "python_full_version <= \"3.11.0a6\" and extra == \"toml\""}

[package.extras]
toml = ["tomli"]

[[package]]
name = "coverage-badge"
version = "1.1.0"
description = "Generate coverage badges for Coverage.py."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
coverage = "*"

[[package]]
name = "cryptography"
version = "37.0.4"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
sdist = ["setuptools_rust (>=0.11.4)"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "cufflinks"
version = "0.17.3"
description = "Productivity Tools for Plotly + Pandas"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
colorlover = ">=0.2.1"
ipython = ">=5.3.0"
ipywidgets = ">=7.0.0"
numpy = ">=1.9.2"
pandas = ">=0.19.2"
plotly = ">=4.1.1"
six = ">=1.9.0"

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cymem"
version = "2.0.6"
description = "Manage calls to calloc/free through Cython"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "cython"
version = "0.29.14"
description = "The Cython compiler for writing C extensions for the Python language."
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "darglint"
version = "1.8.1"
description = "A utility for ensuring Google-style docstrings stay up to date with the source code."
category = "dev"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "dash"
version = "2.6.0"
description = "A Python framework for building reactive web-apps. Developed by Plotly."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
dash-core-components = "2.0.0"
dash-html-components = "2.0.0"
dash-table = "5.0.0"
Flask = ">=1.0.4"
flask-compress = "*"
plotly = ">=5.0.0"

[package.extras]
celery = ["redis (>=3.5.3)", "celery[redis] (>=5.1.2)"]
ci = ["dash-flow-example (==0.0.5)", "dash-dangerously-set-inner-html", "flake8 (==3.9.2)", "flaky (==3.7.0)", "flask-talisman (==1.0.0)", "mimesis", "mock (==4.0.3)", "numpy", "preconditions", "pylint (==2.13.5)", "pytest-mock", "pytest-sugar (==0.9.4)", "pytest-rerunfailures", "black (==21.6b0)", "isort (==4.3.21)", "orjson (==3.5.4)", "pyarrow (<3)", "pandas (==1.1.5)", "xlrd (<2)", "black (==22.3.0)", "orjson (==3.6.7)", "pyarrow", "openpyxl", "pandas (>=1.4.0)", "xlrd (>=2.0.1)"]
dev = ["coloredlogs (>=15.0.1)", "fire (>=0.4.0)", "PyYAML (>=5.4.1)"]
diskcache = ["diskcache (>=5.2.1)", "multiprocess (>=0.70.12)", "psutil (>=5.8.0)"]
testing = ["beautifulsoup4 (>=4.8.2)", "lxml (>=4.6.2)", "percy (>=2.0.2)", "pytest (>=6.0.2)", "requests[security] (>=2.21.0)", "selenium (>=3.141.0,<=4.2.0)", "waitress (>=1.4.4)", "cryptography (<3.4)"]

[[package]]
name = "dash-auth"
version = "1.4.1"
description = "Dash Authorization Package."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
chart_studio = ">=1.0.0"
dash = ">=1.1.1"
Flask = ">=1.0.2"
flask-compress = "*"
flask-seasurf = "*"
itsdangerous = ">=1.1.0"
requests = "*"
retrying = "*"
ua_parser = "*"

[[package]]
name = "dash-bootstrap-components"
version = "0.13.1"
description = "Bootstrap themed components for use in Plotly Dash"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.dependencies]
dash = ">=1.9.0"

[package.extras]
pandas = ["numpy", "pandas"]

[[package]]
name = "dash-core-components"
version = "2.0.0"
description = "Core component suite for Dash"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "dash-cytoscape"
version = "0.3.0"
description = "A Component Library for Dash aimed at facilitating network visualization in Python, wrapped around Cytoscape.js"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
dash = "*"

[[package]]
name = "dash-html-components"
version = "2.0.0"
description = "Vanilla HTML components for Dash"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "dash-table"
version = "5.0.0"
description = "Dash table"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "databricks-cli"
version = "0.17.0"
description = "A command line interface for Databricks"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
click = ">=7.0"
oauthlib = ">=3.1.0"
pyjwt = ">=1.7.0"
requests = ">=2.17.3"
six = ">=1.10.0"
tabulate = ">=0.7.7"

[[package]]
name = "dataclasses"
version = "0.6"
description = "A backport of the dataclasses module for Python 3.6"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "debugpy"
version = "1.6.2"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "defusedxml"
version = "0.7.1"
description = "XML bomb protection for Python stdlib modules"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "dill"
version = "0.3.5.1"
description = "serialize all of python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "distlib"
version = "0.3.5"
description = "Distribution utilities"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "docker"
version = "5.0.3"
description = "A Python library for the Docker Engine API."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pywin32 = {version = "227", markers = "sys_platform == \"win32\""}
requests = ">=2.14.2,<2.18.0 || >2.18.0"
websocket-client = ">=0.32.0"

[package.extras]
ssh = ["paramiko (>=2.4.2)"]
tls = ["pyOpenSSL (>=17.5.0)", "cryptography (>=3.4.7)", "idna (>=2.0.0)"]

[[package]]
name = "docstr-coverage"
version = "2.2.0"
description = "Utility for examining python source files to ensure proper documentation. Lists missing docstrings, and calculates overall docstring coverage percentage rating."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
click = "*"
PyYAML = "*"

[package.extras]
lint = ["flake8 (==3.9.2)", "black (==21.5b2)", "isort (==5.9.0)"]
test = ["pytest (==6.2.5)", "pytest-mock (==3.4.0)"]

[[package]]
name = "dparse"
version = "0.5.1"
description = "A parser for Python dependency files"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
packaging = "*"
pyyaml = "*"
toml = "*"

[package.extras]
pipenv = ["pipenv"]

[[package]]
name = "dtreeviz"
version = "1.3.7"
description = "A Python 3 library for sci-kit learn, XGBoost, LightGBM, and Spark decision tree visualization"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colour = "*"
graphviz = ">=0.9"
matplotlib = "*"
numpy = "*"
pandas = "*"
pytest = "*"
scikit-learn = "*"

[package.extras]
lightgbm = ["lightgbm"]
pyspark = ["pyspark"]
xgboost = ["xgboost"]

[[package]]
name = "emoji"
version = "2.0.0"
description = "Emoji for Python"
category = "main"
optional = false
python-versions = "*"

[package.extras]
dev = ["pytest", "coverage", "coveralls"]

[[package]]
name = "entrypoints"
version = "0.4"
description = "Discover and load entry points from installed packages."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "evidently"
version = "0.1.51.dev0"
description = "Open-source tools to analyze, monitor, and debug machine learning model in production."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
dataclasses = ">=0.6"
numpy = ">=1.19.5"
pandas = ">=1.1.5"
plotly = ">=5.5.0"
PyYAML = ">=5.1,<6.0"
requests = ">=2.19.0"
scikit-learn = ">=0.23.2"
scipy = ">=1.5.4"
statsmodels = ">=0.12.2"

[package.extras]
dev = ["setuptools (==50.3.2)", "flake8 (==4.0.1)", "jupyter (==1.0.0)", "mypy (==0.910)", "pytest (==6.2.5)", "types-PyYAML (==6.0.1)", "types-requests (==2.26.0)"]

[[package]]
name = "executing"
version = "0.8.3"
description = "Get the currently executing AST node of a frame, and other information"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "explainerdashboard"
version = "0.3.7"
description = "Quickly build Explainable AI dashboards that show the inner workings of so-called \"blackbox\" machine learning models."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
click = "*"
dash = ">=1.20"
dash-auth = "*"
dash-bootstrap-components = "<1"
dtreeviz = ">=1.3"
flask-simplelogin = "*"
joblib = "*"
jupyter-dash = "*"
numpy = "*"
orjson = "*"
oyaml = "*"
pandas = ">=1.1"
scikit-learn = "*"
shap = ">=0.37"
waitress = "*"

[[package]]
name = "fairlearn"
version = "0.7.0"
description = "Algorithms for mitigating unfairness in supervised machine learning"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.17.2"
pandas = ">=0.25.1"
scikit-learn = ">=0.22.1"
scipy = ">=1.4.1"

[package.extras]
customplots = ["matplotlib (>=3.2.1)"]

[[package]]
name = "fastapi"
version = "0.79.0"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
category = "main"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
pydantic = ">=1.6.2,<1.7 || >1.7,<1.7.1 || >1.7.1,<1.7.2 || >1.7.2,<1.7.3 || >1.7.3,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0"
starlette = "0.19.1"

[package.extras]
all = ["requests (>=2.24.0,<3.0.0)", "jinja2 (>=2.11.2,<4.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "itsdangerous (>=1.1.0,<3.0.0)", "pyyaml (>=5.3.1,<7.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "orjson (>=3.2.1,<4.0.0)", "email_validator (>=1.1.1,<2.0.0)", "uvicorn[standard] (>=0.12.0,<0.18.0)"]
dev = ["python-jose[cryptography] (>=3.3.0,<4.0.0)", "passlib[bcrypt] (>=1.7.2,<2.0.0)", "autoflake (>=1.4.0,<2.0.0)", "flake8 (>=3.8.3,<4.0.0)", "uvicorn[standard] (>=0.12.0,<0.18.0)", "pre-commit (>=2.17.0,<3.0.0)"]
doc = ["mkdocs (>=1.1.2,<2.0.0)", "mkdocs-material (>=8.1.4,<9.0.0)", "mdx-include (>=1.4.1,<2.0.0)", "mkdocs-markdownextradata-plugin (>=0.1.7,<0.3.0)", "typer (>=0.4.1,<0.5.0)", "pyyaml (>=5.3.1,<7.0.0)"]
test = ["pytest (>=6.2.4,<7.0.0)", "pytest-cov (>=2.12.0,<4.0.0)", "mypy (==0.910)", "flake8 (>=3.8.3,<4.0.0)", "black (==22.3.0)", "isort (>=5.0.6,<6.0.0)", "requests (>=2.24.0,<3.0.0)", "httpx (>=0.14.0,<0.19.0)", "email_validator (>=1.1.1,<2.0.0)", "sqlalchemy (>=1.3.18,<1.5.0)", "peewee (>=3.13.3,<4.0.0)", "databases[sqlite] (>=0.3.2,<0.6.0)", "orjson (>=3.2.1,<4.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "flask (>=1.1.2,<3.0.0)", "anyio[trio] (>=3.2.1,<4.0.0)", "types-ujson (==4.2.1)", "types-orjson (==3.6.2)", "types-dataclasses (==0.6.5)"]

[[package]]
name = "fastjsonschema"
version = "2.16.1"
description = "Fastest Python implementation of JSON schema"
category = "main"
optional = false
python-versions = "*"

[package.extras]
devel = ["colorama", "jsonschema", "json-spec", "pylint", "pytest", "pytest-benchmark", "pytest-cache", "validictory"]

[[package]]
name = "ffmpy"
version = "0.3.0"
description = "A simple Python wrapper for ffmpeg"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "filelock"
version = "3.7.1"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2021.8.17b43)", "sphinx (>=4.1)", "sphinx-autodoc-typehints (>=1.12)"]
testing = ["covdefaults (>=1.2.0)", "coverage (>=4)", "pytest (>=4)", "pytest-cov", "pytest-timeout (>=1.4.2)"]

[[package]]
name = "flask"
version = "2.1.3"
description = "A simple framework for building complex web applications."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0"
importlib-metadata = {version = ">=3.6.0", markers = "python_version < \"3.10\""}
itsdangerous = ">=2.0"
Jinja2 = ">=3.0"
Werkzeug = ">=2.0"

[package.extras]
async = ["asgiref (>=3.2)"]
dotenv = ["python-dotenv"]

[[package]]
name = "flask-compress"
version = "1.12"
description = "Compress responses in your Flask app with gzip, deflate or brotli."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
brotli = "*"
flask = "*"

[[package]]
name = "flask-seasurf"
version = "1.1.1"
description = "An updated CSRF extension for Flask."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"

[[package]]
name = "flask-simplelogin"
version = "0.1.1"
description = "Flask Simple Login - Login Extension for Flask"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.dependencies]
click = ">=8.0.1,<9.0.0"
Flask = ">=0.12"
Flask-WTF = ">=0.15.1,<0.16.0"
WTForms = ">=2.1"

[package.extras]
docs = ["sphinx-rtd-theme (>=0.5.2,<0.6.0)", "sphinx-markdown-tables (>=0.0.15,<0.0.16)", "Sphinx (>=4.1.2,<5.0.0)", "recommonmark (>=0.7.1,<0.8.0)"]

[[package]]
name = "flask-wtf"
version = "0.15.1"
description = "Simple integration of Flask and WTForms."
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
Flask = "*"
itsdangerous = "*"
WTForms = "*"

[package.extras]
email = ["email-validator"]

[[package]]
name = "fonttools"
version = "4.34.4"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "uharfbuzz (>=0.23.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=14.0.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
repacker = ["uharfbuzz (>=0.23.0)"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=14.0.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "frozenlist"
version = "1.3.0"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "fs"
version = "2.4.16"
description = "Python's filesystem abstraction layer"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
appdirs = ">=1.4.3,<1.5.0"
six = ">=1.10,<2.0"

[package.extras]
scandir = ["scandir (>=1.5,<2.0)"]

[[package]]
name = "fsspec"
version = "2022.5.0"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
dropbox = ["dropboxdrivefs", "requests", "dropbox"]
entrypoints = ["importlib-metadata"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["requests", "aiohttp"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
tqdm = ["tqdm"]

[[package]]
name = "fugue"
version = "0.7.0"
description = "An abstraction layer for distributed computation"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
adagio = ">=0.2.4"
fugue-sql-antlr = ">=0.1.0"
jinja2 = "*"
pandas = ">=1.0.2"
pyarrow = ">=0.15.1"
qpd = ">=0.3.1"
sqlalchemy = "*"
triad = ">=0.6.6"

[package.extras]
spark = ["pyspark"]
notebook = ["ipython (>=7.10.0)", "jupyterlab", "notebook"]
ibis = ["ibis-framework (>=2.1.1)"]
duckdb = ["numpy", "pyarrow (>=5.0.0)", "duckdb (>=0.3.2)"]
dask = ["qpd[dask] (>=0.3.1)", "dask"]
cpp_sql_parser = ["fugue-sql-antlr[cpp] (>=0.1.0)"]
all = ["ibis-framework (>=2)", "pyarrow (>=5.0.0)", "duckdb (>=0.3.2)", "ipython (>=7.10.0)", "jupyterlab", "notebook", "qpd[dask] (>=0.3.1)", "dask", "pyspark", "fugue-sql-antlr[cpp] (>=0.1.0)"]

[[package]]
name = "fugue-sql-antlr"
version = "0.1.0"
description = "Fugue SQL Antlr Parser"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
antlr4-python3-runtime = ">=4.10"
jinja2 = "*"
triad = "*"

[package.extras]
cpp = ["fugue-sql-antlr-cpp (==0.1.0)"]
test = ["speedy-antlr-tool"]

[[package]]
name = "funcy"
version = "1.17"
description = "A fancy and practical functional tools"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "future"
version = "0.18.2"
description = "Clean single-source support for Python 3 and 2"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "gensim"
version = "3.8.3"
description = "Python framework for fast Vector Space Modelling"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Cython = "0.29.14"
numpy = ">=1.11.3"
scipy = ">=0.18.1"
six = ">=1.5.0"
smart-open = ">=1.8.1"

[package.extras]
distributed = ["Pyro4 (>=4.27)"]
docs = ["pytest", "pytest-rerunfailures", "mock", "cython", "nmslib", "pyemd", "testfixtures", "Morfessor (==2.0.2a4)", "python-Levenshtein (>=0.10.2)", "visdom (>0.1.8.7)", "scikit-learn", "Pyro4 (>=4.27)", "sphinx (<=2.4.4)", "sphinx-gallery", "sphinxcontrib.programoutput", "sphinxcontrib-napoleon", "matplotlib", "plotly", "memory-profiler", "annoy", "pyro4", "nltk", "statsmodels", "pandas"]
test = ["pytest", "pytest-rerunfailures", "mock", "cython", "nmslib", "pyemd", "testfixtures", "Morfessor (==2.0.2a4)", "python-Levenshtein (>=0.10.2)", "visdom (>0.1.8.7)", "scikit-learn"]
test-win = ["pytest", "pytest-rerunfailures", "mock", "cython", "nmslib", "pyemd", "testfixtures", "Morfessor (==2.0.2a4)", "python-Levenshtein (>=0.10.2)", "visdom (>0.1.8.7)", "scikit-learn"]

[[package]]
name = "gevent"
version = "21.12.0"
description = "Coroutine-based network library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5"

[package.dependencies]
cffi = {version = ">=1.12.2", markers = "platform_python_implementation == \"CPython\" and sys_platform == \"win32\""}
greenlet = {version = ">=1.1.0,<2.0", markers = "platform_python_implementation == \"CPython\""}
"zope.event" = "*"
"zope.interface" = "*"

[package.extras]
dnspython = ["dnspython (>=1.16.0,<2.0)", "idna"]
docs = ["repoze.sphinx.autointerface", "sphinxcontrib-programoutput", "zope.schema"]
monitor = ["psutil (>=5.7.0)"]
recommended = ["cffi (>=1.12.2)", "dnspython (>=1.16.0,<2.0)", "idna", "selectors2", "backports.socketpair", "psutil (>=5.7.0)"]
test = ["requests", "objgraph", "cffi (>=1.12.2)", "dnspython (>=1.16.0,<2.0)", "idna", "selectors2", "futures", "mock", "backports.socketpair", "contextvars (==2.4)", "coverage (>=5.0)", "coveralls (>=1.7.0)", "psutil (>=5.7.0)"]

[[package]]
name = "gitdb"
version = "4.0.9"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.27"
description = "GitPython is a python library used to interact with Git repositories"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[[package]]
name = "google-api-core"
version = "2.8.2"
description = "Google API client core library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
google-auth = ">=1.25.0,<3.0dev"
googleapis-common-protos = ">=1.56.2,<2.0dev"
protobuf = ">=3.15.0,<5.0.0dev"
requests = ">=2.18.0,<3.0.0dev"

[package.extras]
grpc = ["grpcio (>=1.33.2,<2.0dev)", "grpcio-status (>=1.33.2,<2.0dev)"]

[[package]]
name = "google-auth"
version = "2.9.1"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = {version = ">=3.1.4,<5", markers = "python_version >= \"3.6\""}
six = ">=1.9.0"

[package.extras]
aiohttp = ["requests (>=2.20.0,<3.0.0dev)", "aiohttp (>=3.6.2,<4.0.0dev)"]
enterprise_cert = ["cryptography (==36.0.2)", "pyopenssl (==22.0.0)"]
pyopenssl = ["pyopenssl (>=20.0.0)"]
reauth = ["pyu2f (>=0.1.5)"]

[[package]]
name = "google-cloud-core"
version = "2.3.2"
description = "Google Cloud API client core library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = ">=1.31.6,<2.0.0 || >2.3.0,<3.0.0dev"
google-auth = ">=1.25.0,<3.0dev"

[package.extras]
grpc = ["grpcio (>=1.38.0,<2.0dev)"]

[[package]]
name = "google-cloud-storage"
version = "2.4.0"
description = "Google Cloud Storage API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = ">=1.31.5,<2.0.0 || >2.3.0,<3.0.0dev"
google-auth = ">=1.25.0,<3.0dev"
google-cloud-core = ">=2.3.0,<3.0dev"
google-resumable-media = ">=2.3.2"
requests = ">=2.18.0,<3.0.0dev"

[package.extras]
protobuf = ["protobuf (<5.0.0dev)"]

[[package]]
name = "google-crc32c"
version = "1.3.0"
description = "A python wrapper of the C library 'Google CRC32C'"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest"]

[[package]]
name = "google-resumable-media"
version = "2.3.3"
description = "Utilities for Google Media Downloads and Resumable Uploads"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
google-crc32c = ">=1.0,<2.0dev"

[package.extras]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0dev)"]
requests = ["requests (>=2.18.0,<3.0.0dev)"]

[[package]]
name = "googleapis-common-protos"
version = "1.56.4"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.15.0,<5.0.0dev"

[package.extras]
grpc = ["grpcio (>=1.0.0,<2.0.0dev)"]

[[package]]
name = "gradio"
version = "3.0.24"
description = "Python library for easily interacting with trained machine learning models"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
aiohttp = "*"
analytics-python = "*"
fastapi = "*"
ffmpy = "*"
fsspec = "*"
httpx = "*"
Jinja2 = "*"
markdown-it-py = {version = "*", extras = ["linkify", "plugins"]}
matplotlib = "*"
numpy = "*"
orjson = "*"
pandas = "*"
paramiko = "*"
pillow = "*"
pycryptodome = "*"
pydantic = "*"
pydub = "*"
python-multipart = "*"
requests = "*"
uvicorn = "*"

[[package]]
name = "graphviz"
version = "0.20"
description = "Simple Python interface for Graphviz"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["tox (>=3)", "flake8", "pep8-naming", "wheel", "twine"]
docs = ["sphinx (>=4)", "sphinx-autodoc-typehints", "sphinx-rtd-theme"]
test = ["pytest (>=7)", "pytest-mock (>=3)", "mock (>=4)", "pytest-cov", "coverage"]

[[package]]
name = "greenlet"
version = "1.1.2"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"

[package.extras]
docs = ["sphinx"]

[[package]]
name = "grpcio"
version = "1.43.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
six = ">=1.5.2"

[package.extras]
protobuf = ["grpcio-tools (>=1.43.0)"]

[[package]]
name = "gunicorn"
version = "20.1.0"
description = "WSGI HTTP Server for UNIX"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
eventlet = ["eventlet (>=0.24.1)"]
gevent = ["gevent (>=1.4.0)"]
setproctitle = ["setproctitle"]
tornado = ["tornado (>=0.2)"]

[[package]]
name = "h11"
version = "0.13.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "hazm"
version = "0.7.0"
description = "Python library for digesting Persian text."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
libwapiti = {version = ">=0.2.1", markers = "platform_system != \"Windows\""}
nltk = "3.3"

[package.extras]
wapiti = ["libwapiti (>=0.2.1)"]

[[package]]
name = "holoviews"
version = "1.14.9"
description = "Stop plotting your data - annotate your data and let it visualize itself."
category = "main"
optional = false
python-versions = ">=2.7"

[package.dependencies]
colorcet = "*"
numpy = ">=1.0"
packaging = "*"
pandas = ">=0.20.0"
panel = ">=0.8.0"
param = ">=1.9.3,<2.0"
pyviz-comms = ">=0.7.4"

[package.extras]
all = ["streamz (>=0.5.0)", "pillow", "dask", "nose", "datashader (>=0.11.1)", "networkx", "deepdiff", "ffmpeg", "ipython (>=5.4.0)", "bokeh (>=1.1.0)", "xarray (>=0.10.4)", "mock", "shapely", "pyarrow", "notebook", "path.py", "cftime", "nbconvert", "scipy", "scikit-image", "codecov", "dash (>=1.16)", "matplotlib (>=3)", "netcdf4", "plotly (>=4.0)", "flake8", "nbsmoke (>=0.2.0)"]
basic_tests = ["nose", "mock", "flake8", "path.py", "matplotlib (>=3)", "nbsmoke (>=0.2.0)", "nbconvert", "codecov", "bokeh (>=1.1.0)", "pandas", "ipython (>=5.4.0)", "notebook"]
build = ["param (>=1.7.0)", "setuptools (>=30.3.0)", "pyct (>=0.4.4)"]
doc = ["ipython (>=5.4.0)", "notebook", "matplotlib (>=3)", "bokeh (>=1.1.0)", "networkx", "pillow", "xarray (>=0.10.4)", "plotly (>=4.0)", "dash (>=1.16)", "streamz (>=0.5.0)", "datashader (>=0.11.1)", "ffmpeg", "cftime", "netcdf4", "dask", "scipy", "shapely", "scikit-image", "nbsite (>=0.7.1)", "sphinx", "mpl-sample-data (>=3.1.3)", "pscript", "graphviz", "bokeh (>2.2)", "pydata-sphinx-theme", "sphinx-copybutton", "pooch"]
examples = ["ipython (>=5.4.0)", "notebook", "matplotlib (>=3)", "bokeh (>=1.1.0)", "networkx", "pillow", "xarray (>=0.10.4)", "plotly (>=4.0)", "dash (>=1.16)", "streamz (>=0.5.0)", "datashader (>=0.11.1)", "ffmpeg", "cftime", "netcdf4", "dask", "scipy", "shapely", "scikit-image"]
extras = ["ipython (>=5.4.0)", "notebook", "matplotlib (>=3)", "bokeh (>=1.1.0)", "networkx", "pillow", "xarray (>=0.10.4)", "plotly (>=4.0)", "dash (>=1.16)", "streamz (>=0.5.0)", "datashader (>=0.11.1)", "ffmpeg", "cftime", "netcdf4", "dask", "scipy", "shapely", "scikit-image", "pscript (==0.7.1)"]
nbtests = ["ipython (>=5.4.0)", "notebook", "matplotlib (>=3)", "bokeh (>=1.1.0)", "nose", "deepdiff"]
notebook = ["ipython (>=5.4.0)", "notebook"]
recommended = ["ipython (>=5.4.0)", "notebook", "matplotlib (>=3)", "bokeh (>=1.1.0)"]
tests = ["nose", "mock", "flake8", "path.py", "matplotlib (>=3)", "nbsmoke (>=0.2.0)", "nbconvert", "codecov"]
unit_tests = ["ipython (>=5.4.0)", "notebook", "matplotlib (>=3)", "bokeh (>=1.1.0)", "networkx", "pillow", "xarray (>=0.10.4)", "plotly (>=4.0)", "dash (>=1.16)", "streamz (>=0.5.0)", "datashader (>=0.11.1)", "ffmpeg", "cftime", "netcdf4", "dask", "scipy", "shapely", "scikit-image", "nose", "mock", "flake8", "path.py", "nbsmoke (>=0.2.0)", "nbconvert", "codecov", "pyarrow"]

[[package]]
name = "htmlmin"
version = "0.1.12"
description = "An HTML Minifier"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "httpcore"
version = "0.13.2"
description = "A minimal low-level HTTP client."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
h11 = "<1.0.0"
sniffio = ">=1.0.0,<2.0.0"

[package.extras]
http2 = ["h2 (>=3,<5)"]

[[package]]
name = "httpx"
version = "0.18.1"
description = "The next generation HTTP client."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
certifi = "*"
httpcore = ">=0.13.0,<0.14.0"
rfc3986 = {version = ">=1.3,<2", extras = ["idna2008"]}
sniffio = "*"

[package.extras]
brotli = ["brotlicffi (>=1.0.0,<2.0.0)"]
http2 = ["h2 (>=3.0.0,<4.0.0)"]

[[package]]
name = "hvplot"
version = "0.8.0"
description = "A high-level plotting API for the PyData ecosystem built on HoloViews."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
bokeh = ">=1.0.0"
colorcet = ">=2"
holoviews = ">=1.11.0"
numpy = ">=1.15"
packaging = "*"
pandas = "*"

[package.extras]
tests = ["scipy", "pooch", "xarray", "plotly", "matplotlib", "numpy (>=1.7)", "nbsmoke (>=0.2.0)", "pytest-cov", "pytest", "parameterized", "flake8", "codecov"]
examples_extra = ["pygraphviz", "plotly", "matplotlib", "pyepsg (>=0.4.0)", "fiona (>=1.8.18)", "pooch (>=1.6.0)", "python-snappy (>=0.6.0)", "scikit-image (>=0.17.2)", "spatialpandas (>=0.4.3)", "selenium (>=3.141.0)", "pillow (>=8.2.0)", "scipy (>=1.5.3)", "s3fs (>=2022.1.0)", "pyproj (>=3.0.1)", "cartopy (>=0.18.0)", "rasterio (>=1.2.6)", "notebook (>=5.4)", "datashader (>=0.6.5)", "dask (>=2021.3.0)", "intake-xarray (>=0.5.0)", "intake-parquet (>=0.2.3)", "intake (>=0.6.5)", "streamz (>=0.3.0)", "networkx (>=2.6.3)", "xarray (>=0.18.2)", "geopandas (>=0.9.0)", "numba (>=0.51.0)", "geoviews (>=1.6.0)"]
examples = ["plotly", "matplotlib", "pyepsg (>=0.4.0)", "fiona (>=1.8.18)", "pooch (>=1.6.0)", "python-snappy (>=0.6.0)", "scikit-image (>=0.17.2)", "spatialpandas (>=0.4.3)", "selenium (>=3.141.0)", "pillow (>=8.2.0)", "scipy (>=1.5.3)", "s3fs (>=2022.1.0)", "pyproj (>=3.0.1)", "cartopy (>=0.18.0)", "rasterio (>=1.2.6)", "notebook (>=5.4)", "datashader (>=0.6.5)", "dask (>=2021.3.0)", "intake-xarray (>=0.5.0)", "intake-parquet (>=0.2.3)", "intake (>=0.6.5)", "streamz (>=0.3.0)", "networkx (>=2.6.3)", "xarray (>=0.18.2)", "geopandas (>=0.9.0)", "numba (>=0.51.0)", "geoviews (>=1.6.0)"]
doc = ["sphinx-copybutton", "pydata-sphinx-theme", "nbsite (>=0.7.1)", "pygraphviz", "plotly", "matplotlib", "pyepsg (>=0.4.0)", "fiona (>=1.8.18)", "pooch (>=1.6.0)", "python-snappy (>=0.6.0)", "scikit-image (>=0.17.2)", "spatialpandas (>=0.4.3)", "selenium (>=3.141.0)", "pillow (>=8.2.0)", "scipy (>=1.5.3)", "s3fs (>=2022.1.0)", "pyproj (>=3.0.1)", "cartopy (>=0.18.0)", "rasterio (>=1.2.6)", "notebook (>=5.4)", "datashader (>=0.6.5)", "dask (>=2021.3.0)", "intake-xarray (>=0.5.0)", "intake-parquet (>=0.2.3)", "intake (>=0.6.5)", "streamz (>=0.3.0)", "networkx (>=2.6.3)", "xarray (>=0.18.2)", "geopandas (>=0.9.0)", "numba (>=0.51.0)", "geoviews (>=1.6.0)"]
build = ["setuptools", "pyct (>=0.4.4)", "param (>=1.6.1)"]
all = ["xarray (>=0.18.2)", "xarray", "streamz (>=0.3.0)", "sphinx-copybutton", "spatialpandas (>=0.4.3)", "setuptools", "selenium (>=3.141.0)", "scipy (>=1.5.3)", "scipy", "scikit-image (>=0.17.2)", "s3fs (>=2022.1.0)", "rasterio (>=1.2.6)", "python-snappy (>=0.6.0)", "pytest-cov", "pytest", "pyproj (>=3.0.1)", "pygraphviz", "pyepsg (>=0.4.0)", "pydata-sphinx-theme", "pyct (>=0.4.4)", "pooch (>=1.6.0)", "pooch", "plotly", "pillow (>=8.2.0)", "parameterized", "param (>=1.6.1)", "numpy (>=1.7)", "numba (>=0.51.0)", "notebook (>=5.4)", "networkx (>=2.6.3)", "nbsmoke (>=0.2.0)", "nbsite (>=0.7.1)", "matplotlib", "intake-xarray (>=0.5.0)", "intake-parquet (>=0.2.3)", "intake (>=0.6.5)", "geoviews (>=1.6.0)", "geopandas (>=0.9.0)", "flake8", "fiona (>=1.8.18)", "datashader (>=0.6.5)", "dask (>=2021.3.0)", "codecov", "cartopy (>=0.18.0)"]

[[package]]
name = "hyperopt"
version = "0.2.7"
description = "Distributed Asynchronous Hyperparameter Optimization"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cloudpickle = "*"
future = "*"
networkx = ">=2.2"
numpy = "*"
py4j = "*"
scipy = "*"
six = "*"
tqdm = "*"

[package.extras]
dev = ["pytest", "nose", "pre-commit", "black"]
sparktrials = ["pyspark"]
mongotrials = ["pymongo"]
atpe = ["scikit-learn", "lightgbm"]

[[package]]
name = "identify"
version = "2.5.1"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imagehash"
version = "4.2.1"
description = "Image Hashing library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
pillow = "*"
PyWavelets = "*"
scipy = "*"
six = "*"

[[package]]
name = "imageio"
version = "2.19.5"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
pillow = ">=8.3.2"

[package.extras]
all-plugins = ["astropy", "av", "imageio-ffmpeg", "opencv-python", "psutil", "tifffile"]
all-plugins-pypy = ["av", "imageio-ffmpeg", "psutil", "tifffile"]
build = ["wheel"]
dev = ["invoke", "pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "av", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "invoke", "itk", "numpydoc", "opencv-python", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "sphinx", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
opencv = ["opencv-python"]
pyav = ["av"]
test = ["invoke", "pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "imbalanced-learn"
version = "0.7.0"
description = "Toolbox for imbalanced dataset in machine learning."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = ">=0.11"
numpy = ">=1.13.3"
scikit-learn = ">=0.23"
scipy = ">=0.19.1"

[package.extras]
docs = ["sphinx", "sphinx-gallery", "sphinx-rtd-theme", "sphinxcontrib-bibtex", "numpydoc", "matplotlib", "pandas"]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "importlib-metadata"
version = "4.12.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.3)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "5.8.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "interpret"
version = "0.2.4"
description = "Fit interpretable machine learning models. Explain blackbox machine learning."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
interpret-core = {version = ">=0.2.4", extras = ["dash", "debug", "decisiontree", "ebm", "lime", "linear", "notebook", "plotly", "required", "sensitivity", "shap", "skoperules", "treeinterpreter"]}

[[package]]
name = "interpret-core"
version = "0.2.7"
description = "Fit interpretable machine learning models. Explain blackbox machine learning."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
dash = {version = ">=1.0.0", optional = true, markers = "extra == \"dash\""}
dash-cytoscape = {version = ">=0.1.1", optional = true, markers = "extra == \"dash\""}
dash-table = {version = ">=4.1.0", optional = true, markers = "extra == \"dash\""}
dill = {version = ">=0.2.5", optional = true, markers = "extra == \"shap\""}
gevent = {version = ">=1.3.6", optional = true, markers = "extra == \"dash\""}
ipykernel = {version = ">=5.1.0", optional = true, markers = "extra == \"notebook\""}
ipython = {version = ">=7.4.0", optional = true, markers = "extra == \"notebook\""}
joblib = {version = ">=0.11", optional = true, markers = "extra == \"required\""}
lime = {version = ">=0.1.1.33", optional = true, markers = "extra == \"lime\""}
numpy = {version = ">=1.11.1", optional = true, markers = "extra == \"required\""}
pandas = {version = ">=0.19.2", optional = true, markers = "extra == \"required\""}
plotly = {version = ">=3.8.1", optional = true, markers = "extra == \"plotly\""}
psutil = {version = ">=5.6.2", optional = true, markers = "extra == \"debug\""}
requests = {version = ">=2.19.0", optional = true, markers = "extra == \"dash\""}
SALib = {version = ">=1.3.3", optional = true, markers = "extra == \"sensitivity\""}
scikit-learn = {version = ">=0.18.1", optional = true, markers = "extra == \"required\""}
scipy = {version = ">=0.18.1", optional = true, markers = "extra == \"required\""}
shap = {version = ">=0.28.5", optional = true, markers = "extra == \"shap\""}
skope-rules = {version = ">=1.0.1", optional = true, markers = "extra == \"skoperules\""}
treeinterpreter = {version = ">=0.2.2", optional = true, markers = "extra == \"treeinterpreter\""}

[package.extras]
treeinterpreter = ["treeinterpreter (>=0.2.2)"]
testing = ["ipywidgets (>=7.4.2)", "jupyter (>=1.0.0)", "flake8 (>=3.7.7)", "pytest-cov (>=2.6.1)", "selenium (>=3.141.0)", "nbconvert (>=5.4.1)", "pytest-xdist (>=1.29)", "pytest-runner (>=4.4)", "pytest (>=4.3.0,<=6.0.2)"]
skoperules = ["skope-rules (>=1.0.1)"]
shap = ["dill (>=0.2.5)", "shap (>=0.28.5)"]
sensitivity = ["SALib (>=1.3.3)"]
required = ["joblib (>=0.11)", "scikit-learn (>=0.18.1)", "pandas (>=0.19.2)", "scipy (>=0.18.1)", "numpy (>=1.11.1)"]
plotly = ["plotly (>=3.8.1)"]
notebook = ["ipython (>=7.4.0)", "ipykernel (>=5.1.0)"]
lime = ["lime (>=0.1.1.33)"]
ebm = ["joblib (>=0.11)"]
decisiontree = ["joblib (>=0.11)"]
debug = ["psutil (>=5.6.2)"]
dash = ["requests (>=2.19.0)", "gevent (>=1.3.6)", "dash-table (>=4.1.0)", "dash-cytoscape (>=0.1.1)", "dash (>=1.0.0)"]

[[package]]
name = "interrogate"
version = "1.5.0"
description = "Interrogate a codebase for docstring coverage."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
attrs = "*"
click = ">=7.1"
colorama = "*"
py = "*"
tabulate = "*"
toml = "*"

[package.extras]
dev = ["cairosvg", "sphinx", "sphinx-autobuild", "pytest", "pytest-cov", "pytest-mock", "wheel", "pre-commit"]
docs = ["sphinx", "sphinx-autobuild"]
png = ["cairosvg"]
tests = ["pytest", "pytest-cov", "pytest-mock"]

[[package]]
name = "ipykernel"
version = "6.15.1"
description = "IPython Kernel for Jupyter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
appnope = {version = "*", markers = "platform_system == \"Darwin\""}
debugpy = ">=1.0"
ipython = ">=7.23.1"
jupyter-client = ">=6.1.12"
matplotlib-inline = ">=0.1"
nest-asyncio = "*"
packaging = "*"
psutil = "*"
pyzmq = ">=17"
tornado = ">=6.1"
traitlets = ">=5.1.0"

[package.extras]
test = ["flaky", "ipyparallel", "pre-commit", "pytest-cov", "pytest-timeout", "pytest (>=6.0)"]

[[package]]
name = "ipython"
version = "8.4.0"
description = "IPython: Productive Interactive Computing"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "sys_platform == \"darwin\""}
backcall = "*"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\""}
pickleshare = "*"
prompt-toolkit = ">=2.0.0,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.1.0"
pygments = ">=2.4.0"
stack-data = "*"
traitlets = ">=5"

[package.extras]
all = ["black", "Sphinx (>=1.3)", "ipykernel", "nbconvert", "nbformat", "ipywidgets", "notebook", "ipyparallel", "qtconsole", "pytest (<7.1)", "pytest-asyncio", "testpath", "curio", "matplotlib (!=3.2.0)", "numpy (>=1.19)", "pandas", "trio"]
black = ["black"]
doc = ["Sphinx (>=1.3)"]
kernel = ["ipykernel"]
nbconvert = ["nbconvert"]
nbformat = ["nbformat"]
notebook = ["ipywidgets", "notebook"]
parallel = ["ipyparallel"]
qtconsole = ["qtconsole"]
test = ["pytest (<7.1)", "pytest-asyncio", "testpath"]
test_extra = ["pytest (<7.1)", "pytest-asyncio", "testpath", "curio", "matplotlib (!=3.2.0)", "nbformat", "numpy (>=1.19)", "pandas", "trio"]

[[package]]
name = "ipython-genutils"
version = "0.2.0"
description = "Vestigial utilities from IPython"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "ipywidgets"
version = "7.7.1"
description = "IPython HTML widgets for Jupyter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ipykernel = ">=4.5.1"
ipython = {version = ">=4.0.0", markers = "python_version >= \"3.3\""}
ipython-genutils = ">=0.2.0,<0.3.0"
jupyterlab-widgets = {version = ">=1.0.0", markers = "python_version >= \"3.6\""}
traitlets = ">=4.3.1"
widgetsnbextension = ">=3.6.0,<3.7.0"

[package.extras]
test = ["pytest (>=3.6.0)", "pytest-cov", "mock"]

[[package]]
name = "isodate"
version = "0.6.1"
description = "An ISO 8601 date/time/duration parser and formatter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "isort"
version = "5.10.1"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.6.1,<4.0"

[package.dependencies]
colorama = {version = ">=0.4.3,<0.5.0", optional = true, markers = "extra == \"colors\""}

[package.extras]
pipfile_deprecated_finder = ["pipreqs", "requirementslib"]
requirements_deprecated_finder = ["pipreqs", "pip-api"]
colors = ["colorama (>=0.4.3,<0.5.0)"]
plugins = ["setuptools"]

[[package]]
name = "itsdangerous"
version = "2.1.2"
description = "Safely pass data to untrusted environments and back."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jedi"
version = "0.18.1"
description = "An autocompletion tool for Python that can be used for text editors."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.0,<0.9.0"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["Django (<3.1)", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "joblib"
version = "1.1.0"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "jsonschema"
version = "4.7.2"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=17.4.0"
importlib-resources = {version = ">=1.4.0", markers = "python_version < \"3.9\""}
pyrsistent = ">=0.14.0,<0.17.0 || >0.17.0,<0.17.1 || >0.17.1,<0.17.2 || >0.17.2"

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]

[[package]]
name = "jupyter"
version = "1.0.0"
description = "Jupyter metapackage. Install all the Jupyter components in one go."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ipykernel = "*"
ipywidgets = "*"
jupyter-console = "*"
nbconvert = "*"
notebook = "*"
qtconsole = "*"

[[package]]
name = "jupyter-client"
version = "7.3.4"
description = "Jupyter protocol implementation and client libraries"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
entrypoints = "*"
jupyter-core = ">=4.9.2"
nest-asyncio = ">=1.5.4"
python-dateutil = ">=2.8.2"
pyzmq = ">=23.0"
tornado = ">=6.0"
traitlets = "*"

[package.extras]
doc = ["ipykernel", "myst-parser", "sphinx-rtd-theme", "sphinx (>=1.3.6)", "sphinxcontrib-github-alt"]
test = ["codecov", "coverage", "ipykernel (>=6.5)", "ipython", "mypy", "pre-commit", "pytest", "pytest-asyncio (>=0.18)", "pytest-cov", "pytest-timeout"]

[[package]]
name = "jupyter-console"
version = "6.4.4"
description = "Jupyter terminal console"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ipykernel = "*"
ipython = "*"
jupyter-client = ">=7.0.0"
prompt-toolkit = ">=2.0.0,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.1.0"
pygments = "*"

[package.extras]
test = ["pexpect"]

[[package]]
name = "jupyter-core"
version = "4.11.1"
description = "Jupyter core package. A base package on which Jupyter projects rely."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pywin32 = {version = ">=1.0", markers = "sys_platform == \"win32\" and platform_python_implementation != \"PyPy\""}
traitlets = "*"

[package.extras]
test = ["ipykernel", "pre-commit", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "jupyter-dash"
version = "0.4.2"
description = "Dash support for the Jupyter notebook interface"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
ansi2html = "*"
dash = "*"
flask = "*"
ipykernel = "*"
ipython = "*"
nest-asyncio = "*"
requests = "*"
retrying = "*"

[package.extras]
dev = ["jupyter-server-proxy", "notebook (>=6.0)", "jupyterlab (>=2.0)"]

[[package]]
name = "jupyterlab-pygments"
version = "0.2.2"
description = "Pygments theme using JupyterLab CSS variables"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jupyterlab-widgets"
version = "1.1.1"
description = "A JupyterLab extension."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "kiwisolver"
version = "1.4.4"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "kmodes"
version = "0.12.1"
description = "Python implementations of the k-modes and k-prototypes clustering algorithms for clustering categorical data."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = ">=0.11"
numpy = ">=1.10.4"
scikit-learn = ">=0.22.0"
scipy = ">=0.13.3"

[package.extras]
dev = ["pytest", "pytest-cov"]

[[package]]
name = "lazy-object-proxy"
version = "1.7.1"
description = "A fast and thorough lazy object proxy."
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "libwapiti"
version = "0.2.1"
description = "Python bindings for libwapiti"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "lightgbm"
version = "3.3.2"
description = "LightGBM Python Package"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
scikit-learn = "!=0.22.0"
scipy = "*"

[package.extras]
dask = ["dask[array] (>=2.0.0)", "dask[dataframe] (>=2.0.0)", "dask[distributed] (>=2.0.0)", "pandas"]

[[package]]
name = "lime"
version = "0.2.0.1"
description = "Local Interpretable Model-Agnostic Explanations for machine learning classifiers"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
matplotlib = "*"
numpy = "*"
scikit-image = ">=0.12"
scikit-learn = ">=0.18"
scipy = "*"
tqdm = "*"

[package.extras]
dev = ["pytest", "flake8"]

[[package]]
name = "linkify-it-py"
version = "1.0.3"
description = "Links recognition library with FULL unicode support."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
uc-micro-py = "*"

[package.extras]
test = ["pytest-cov", "pytest", "coverage"]
doc = ["myst-parser", "sphinx-book-theme", "sphinx"]
dev = ["black", "flake8", "isort", "pre-commit"]
benchmark = ["pytest-benchmark", "pytest"]

[[package]]
name = "llvmlite"
version = "0.34.0"
description = "lightweight wrapper around basic LLVM functionality"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "m2cgen"
version = "0.10.0"
description = "Code-generation for various ML models into native code."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"

[[package]]
name = "mako"
version = "1.2.1"
description = "A super-fast templating language that borrows the best ideas from the existing templating languages."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
babel = ["babel"]
lingua = ["lingua"]
testing = ["pytest"]

[[package]]
name = "mando"
version = "0.6.4"
description = "Create Python CLI apps with little to no effort at all!"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
restructuredText = ["rst2ansi"]

[[package]]
name = "markdown"
version = "3.4.1"
description = "Python implementation of Markdown."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}

[package.extras]
testing = ["coverage", "pyyaml"]

[[package]]
name = "markdown-it-py"
version = "2.1.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
linkify-it-py = {version = ">=1.0,<2.0", optional = true, markers = "extra == \"linkify\""}
mdit-py-plugins = {version = "*", optional = true, markers = "extra == \"plugins\""}
mdurl = ">=0.1,<1.0"

[package.extras]
testing = ["pytest-regressions", "pytest-cov", "pytest", "coverage"]
rtd = ["sphinx-book-theme", "sphinx-design", "sphinx-copybutton", "sphinx", "pyyaml", "myst-parser", "attrs"]
profiling = ["gprof2dot"]
plugins = ["mdit-py-plugins"]
linkify = ["linkify-it-py (>=1.0,<2.0)"]
compare = ["panflute (>=2.1.3,<2.2.0)", "mistune (>=2.0.2,<2.1.0)", "mistletoe (>=0.8.1,<0.9.0)", "markdown (>=3.3.6,<3.4.0)", "commonmark (>=0.9.1,<0.10.0)"]
code_style = ["pre-commit (==2.6)"]
benchmarking = ["pytest-benchmark (>=3.2,<4.0)", "pytest", "psutil"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.5.2"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.17"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=4"

[[package]]
name = "matplotlib-inline"
version = "0.1.3"
description = "Inline Matplotlib backend for Jupyter"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
traitlets = "*"

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mdit-py-plugins"
version = "0.3.0"
description = "Collection of plugins for markdown-it-py"
category = "main"
optional = false
python-versions = "~=3.6"

[package.dependencies]
markdown-it-py = ">=1.0.0,<3.0.0"

[package.extras]
testing = ["pytest-regressions", "pytest-cov", "pytest (>=3.6,<4)", "coverage"]
rtd = ["sphinx-book-theme (>=0.1.0,<0.2.0)", "myst-parser (>=0.14.0,<0.15.0)"]
code_style = ["pre-commit (==2.6)"]

[[package]]
name = "mdurl"
version = "0.1.1"
description = "Markdown URL utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "missingno"
version = "0.5.1"
description = "Missing data visualization module for Python."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
matplotlib = "*"
numpy = "*"
scipy = "*"
seaborn = "*"

[package.extras]
tests = ["pytest", "pytest-mpl"]

[[package]]
name = "mistune"
version = "0.8.4"
description = "The fastest markdown parser in pure Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "mlflow"
version = "1.27.0"
description = "MLflow: A Platform for ML Development and Productionization"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
alembic = "*"
click = ">=7.0"
cloudpickle = "*"
databricks-cli = ">=0.8.7"
docker = ">=4.0.0"
entrypoints = "*"
Flask = "*"
gitpython = ">=2.1.0"
gunicorn = {version = "*", markers = "platform_system != \"Windows\""}
importlib-metadata = ">=3.7.0,<4.7.0 || >4.7.0"
numpy = "*"
packaging = "*"
pandas = "*"
prometheus-flask-exporter = "*"
protobuf = ">=3.12.0"
pytz = "*"
pyyaml = ">=5.1"
querystring-parser = "*"
requests = ">=2.17.3"
scipy = "*"
sqlalchemy = ">=1.4.0"
sqlparse = ">=0.3.1"
waitress = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
aliyun-oss = ["aliyunstoreplugin"]
extras = ["scikit-learn", "pyarrow", "boto3", "google-cloud-storage (>=1.30.0)", "azureml-core (>=1.2.0)", "pysftp", "kubernetes", "mlserver (>=0.5.3)", "mlserver-mlflow (>=0.5.3)", "virtualenv"]
pipelines = ["scikit-learn (>=1.0)", "pyarrow (>=7.0)", "shap (>=0.40)", "pandas-profiling (>=3.1)", "ipython (>=7.0)", "markdown (>=3.3)", "Jinja2 (>=3.0)"]
sqlserver = ["mlflow-dbstore"]

[[package]]
name = "mlxtend"
version = "0.19.0"
description = "Machine Learning Library Extensions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = ">=0.13.2"
matplotlib = ">=3.0.0"
numpy = ">=1.16.2"
pandas = ">=0.24.2"
scikit-learn = ">=0.20.3"
scipy = ">=1.2.1"

[package.extras]
docs = ["mkdocs"]
testing = ["pytest"]

[[package]]
name = "monotonic"
version = "1.6"
description = "An implementation of time.monotonic() for Python 2 & < 3.3"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "msgpack"
version = "1.0.4"
description = "MessagePack serializer"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "msrest"
version = "0.7.1"
description = "AutoRest swagger generator Python client runtime."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
azure-core = ">=1.24.0"
certifi = ">=2017.4.17"
isodate = ">=0.6.0"
requests = ">=2.16,<3.0"
requests-oauthlib = ">=0.5.0"

[package.extras]
async = ["aiohttp (>=3.0)", "aiodns"]

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "multimethod"
version = "1.8"
description = "Multiple argument dispatching."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "multiprocess"
version = "0.70.13"
description = "better multiprocessing and multithreading in python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.dependencies]
dill = ">=0.3.5.1"

[[package]]
name = "murmurhash"
version = "1.0.7"
description = "Cython bindings for MurmurHash"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "mypy"
version = "0.910"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
mypy-extensions = ">=0.4.3,<0.5.0"
toml = "*"
typing-extensions = ">=3.7.4"

[package.extras]
dmypy = ["psutil (>=4.0)"]
python2 = ["typed-ast (>=1.4.0,<1.5.0)"]

[[package]]
name = "mypy-extensions"
version = "0.4.3"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "nbclient"
version = "0.6.6"
description = "A client library for executing notebooks. Formerly nbconvert's ExecutePreprocessor."
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
jupyter-client = ">=6.1.5"
nbformat = ">=5.0"
nest-asyncio = "*"
traitlets = ">=5.2.2"

[package.extras]
sphinx = ["autodoc-traits", "mock", "moto", "myst-parser", "Sphinx (>=1.7)", "sphinx-book-theme"]
test = ["black", "check-manifest", "flake8", "ipykernel", "ipython (<8.0.0)", "ipywidgets (<8.0.0)", "mypy", "pip (>=18.1)", "pre-commit", "pytest (>=4.1)", "pytest-asyncio", "pytest-cov (>=2.6.1)", "setuptools (>=60.0)", "testpath", "twine (>=1.11.0)", "xmltodict"]

[[package]]
name = "nbconvert"
version = "6.5.0"
description = "Converting Jupyter Notebooks"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
beautifulsoup4 = "*"
bleach = "*"
defusedxml = "*"
entrypoints = ">=0.2.2"
jinja2 = ">=3.0"
jupyter-core = ">=4.7"
jupyterlab-pygments = "*"
MarkupSafe = ">=2.0"
mistune = ">=0.8.1,<2"
nbclient = ">=0.5.0"
nbformat = ">=5.1"
packaging = "*"
pandocfilters = ">=1.4.1"
pygments = ">=2.4.1"
tinycss2 = "*"
traitlets = ">=5.0"

[package.extras]
all = ["pytest", "pytest-cov", "pytest-dependency", "ipykernel", "ipywidgets (>=7)", "pre-commit", "pyppeteer (>=1,<1.1)", "tornado (>=6.1)", "sphinx (>=1.5.1)", "sphinx-rtd-theme", "nbsphinx (>=0.2.12)", "ipython"]
docs = ["sphinx (>=1.5.1)", "sphinx-rtd-theme", "nbsphinx (>=0.2.12)", "ipython"]
serve = ["tornado (>=6.1)"]
test = ["pytest", "pytest-cov", "pytest-dependency", "ipykernel", "ipywidgets (>=7)", "pre-commit", "pyppeteer (>=1,<1.1)"]
webpdf = ["pyppeteer (>=1,<1.1)"]

[[package]]
name = "nbformat"
version = "5.4.0"
description = "The Jupyter Notebook format"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
fastjsonschema = "*"
jsonschema = ">=2.6"
jupyter-core = "*"
traitlets = ">=5.1"

[package.extras]
test = ["check-manifest", "testpath", "pytest", "pre-commit"]

[[package]]
name = "nest-asyncio"
version = "1.5.5"
description = "Patch asyncio to allow nested event loops"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "networkx"
version = "2.8.4"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.19)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=2.19)", "mypy (>=0.960)"]
doc = ["sphinx (>=5)", "pydata-sphinx-theme (>=0.9)", "sphinx-gallery (>=0.10)", "numpydoc (>=1.4)", "pillow (>=9.1)", "nb2plots (>=0.6)", "texext (>=0.6.6)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.9)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.1)", "pytest-cov (>=3.0)", "codecov (>=2.1)"]

[[package]]
name = "nltk"
version = "3.3"
description = "Natural Language Toolkit"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
all = ["pyparsing", "gensim", "requests", "scipy", "twython", "scikit-learn", "numpy", "matplotlib", "python-crfsuite"]
corenlp = ["requests"]
machine_learning = ["gensim", "numpy", "python-crfsuite", "scikit-learn", "scipy"]
plot = ["matplotlib"]
tgrep = ["pyparsing"]
twitter = ["twython"]

[[package]]
name = "nodeenv"
version = "1.7.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"

[[package]]
name = "notebook"
version = "6.4.12"
description = "A web-based notebook environment for interactive computing"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
argon2-cffi = "*"
ipykernel = "*"
ipython-genutils = "*"
jinja2 = "*"
jupyter-client = ">=5.3.4"
jupyter-core = ">=4.6.1"
nbconvert = ">=5"
nbformat = "*"
nest-asyncio = ">=1.5"
prometheus-client = "*"
pyzmq = ">=17"
Send2Trash = ">=1.8.0"
terminado = ">=0.8.3"
tornado = ">=6.1"
traitlets = ">=4.2.1"

[package.extras]
docs = ["sphinx", "nbsphinx", "sphinxcontrib-github-alt", "sphinx-rtd-theme", "myst-parser"]
json-logging = ["json-logging"]
test = ["pytest", "coverage", "requests", "testpath", "nbval", "selenium", "pytest-cov", "requests-unixsocket"]

[[package]]
name = "numba"
version = "0.51.2"
description = "compiling Python code using LLVM"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
llvmlite = ">=0.34.0.dev0,<0.35"
numpy = ">=1.15"

[[package]]
name = "numexpr"
version = "2.8.3"
description = "Fast numerical expression evaluator for NumPy"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.13.3"
packaging = "*"

[[package]]
name = "numpy"
version = "1.23.1"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "oauthlib"
version = "3.2.0"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = ["cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
signedtoken = ["cryptography (>=3.0.0)", "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "optuna"
version = "2.10.1"
description = "A hyperparameter optimization framework"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
alembic = "*"
cliff = "*"
cmaes = ">=0.8.2"
colorlog = "*"
numpy = "*"
packaging = ">=20.0"
PyYAML = "*"
scipy = "!=1.4.0"
sqlalchemy = ">=1.1.0"
tqdm = "*"

[package.extras]
benchmark = ["asv", "virtualenv"]
checking = ["black", "hacking", "isort", "mypy (==0.790)", "blackdoc"]
codecov = ["codecov", "pytest-cov"]
doctest = ["cma", "matplotlib (>=3.0.0)", "pandas", "plotly (>=4.0.0)", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "mlflow"]
document = ["Jinja2 (<3.0.0)", "MarkupSafe (<=2.0.1)", "sphinx (<=3.5.4)", "sphinx-rtd-theme (<=1.0.0)", "sphinx-copybutton (<=0.4.0)", "sphinx-gallery (<=0.10.0)", "sphinx-plotly-directive (<=0.1.3)", "pillow", "matplotlib", "scikit-learn (<1.0.0)", "plotly (>=4.0.0)", "pandas", "lightgbm", "torch (==1.8.0)", "torchvision (==0.9.0)", "torchaudio (==0.8.0)", "thop"]
experimental = ["redis"]
integration = ["chainer (>=5.0.0)", "cma", "lightgbm", "mlflow", "wandb", "mpi4py", "mxnet", "pandas", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "xgboost", "tensorflow", "tensorflow-datasets", "pytorch-ignite", "pytorch-lightning (>=1.0.2)", "skorch", "catalyst (>=21.3)", "torchaudio (==0.8.0)", "allennlp (>=2.2.0,<2.7.0)", "fastai", "botorch (>=0.4.0)", "torch (==1.8.0+cpu)", "torchvision (==0.9.0+cpu)", "torch (==1.8.0)", "torchvision (==0.9.0)"]
optional = ["bokeh (<2.0.0)", "matplotlib (>=3.0.0)", "pandas", "plotly (>=4.0.0)", "redis", "scikit-learn (>=0.24.2,<1.0.0)"]
testing = ["bokeh (<2.0.0)", "chainer (>=5.0.0)", "cma", "fakeredis", "lightgbm", "matplotlib (>=3.0.0)", "mlflow", "mpi4py", "mxnet", "pandas", "plotly (>=4.0.0)", "pytest", "scikit-learn (>=0.24.2,<1.0.0)", "scikit-optimize", "xgboost", "tensorflow", "tensorflow-datasets", "pytorch-ignite", "pytorch-lightning (>=1.0.2)", "skorch", "catalyst (>=21.3)", "torchaudio (==0.8.0)", "allennlp (>=2.2.0,<2.7.0)", "fastai", "botorch (>=0.4.0)", "torch (==1.8.0+cpu)", "torchvision (==0.9.0+cpu)", "torch (==1.8.0)", "torchvision (==0.9.0)"]
tests = ["fakeredis", "pytest"]

[[package]]
name = "orjson"
version = "3.7.8"
description = "Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "oyaml"
version = "1.0"
description = "Ordered YAML: drop-in replacement for PyYAML which preserves dict ordering"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyyaml = "*"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.4.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.18.5", markers = "platform_machine != \"aarch64\" and platform_machine != \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.19.2", markers = "platform_machine == \"aarch64\" and python_version < \"3.10\""},
    {version = ">=1.20.0", markers = "platform_machine == \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.21.0", markers = "python_version >= \"3.10\""},
]
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["hypothesis (>=5.5.3)", "pytest (>=6.0)", "pytest-xdist (>=1.31)"]

[[package]]
name = "pandas-profiling"
version = "3.2.0"
description = "Generate profile report for pandas DataFrame"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
htmlmin = ">=0.1.12"
jinja2 = ">=2.11.1"
joblib = ">=1.1.0,<1.2.0"
markupsafe = ">=2.1.1,<2.2.0"
matplotlib = ">=3.2.0"
missingno = ">=0.4.2"
multimethod = ">=1.4"
numpy = ">=1.16.0"
pandas = ">=0.25.3,<1.0.0 || >1.0.0,<1.0.1 || >1.0.1,<1.0.2 || >1.0.2,<1.1.0 || >1.1.0"
phik = ">=0.11.1"
pydantic = ">=1.8.1"
PyYAML = ">=5.0.0"
requests = ">=2.24.0"
scipy = ">=1.4.1"
seaborn = ">=0.10.1"
tangled-up-in-unicode = "0.2.0"
tqdm = ">=4.48.2"
visions = {version = "0.7.4", extras = ["type_image_path"]}

[package.extras]
notebook = ["jupyter-client (>=5.3.4)", "jupyter-core (>=4.6.3)", "ipywidgets (>=7.5.1)"]

[[package]]
name = "pandocfilters"
version = "1.5.0"
description = "Utilities for writing pandoc filters in python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "panel"
version = "0.12.7"
description = "A high level app and dashboarding solution for Python."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
bleach = "*"
bokeh = ">=2.4.0,<2.5.0"
markdown = "*"
param = ">=1.10.0"
pyct = ">=0.4.4"
pyviz-comms = ">=0.7.4"
requests = "*"
tqdm = ">=4.48.0"

[package.extras]
all = ["altair", "channels", "codecov", "datashader", "django (<4)", "flake8", "folium", "graphviz", "holoviews", "holoviews (>1.14.1)", "hvplot", "ipyleaflet", "ipympl", "ipython (>=7.0)", "ipyvolume", "ipywidgets", "ipywidgets-bokeh", "jupyter-bokeh (>=3.0.2)", "lxml", "matplotlib (<3.4)", "nbsite (>=0.7.0a4)", "nbsmoke (>=0.2.0)", "notebook (>=5.4)", "pandas (>=1.3)", "parameterized", "pillow", "plotly", "plotly (>=4.0)", "pytest", "pytest-cov", "pyvista (<0.33)", "scikit-learn", "scipy", "streamz", "twine", "vega-datasets", "vtk (==9.0.1)", "xarray"]
build = ["param (>=1.9.2)", "pyct (>=0.4.4)", "setuptools (>=42,<61)", "bokeh (>=2.4.0,<2.5.0)", "pyviz-comms (>=0.6.0)", "bleach", "tqdm"]
doc = ["notebook (>=5.4)", "holoviews (>1.14.1)", "matplotlib (<3.4)", "pillow", "plotly", "nbsite (>=0.7.0a4)", "graphviz", "lxml"]
examples = ["hvplot", "plotly (>=4.0)", "altair", "streamz", "vega-datasets", "vtk (==9.0.1)", "scikit-learn", "datashader", "jupyter-bokeh (>=3.0.2)", "django (<4)", "channels", "pyvista (<0.33)", "ipywidgets", "ipywidgets-bokeh", "ipyvolume", "ipyleaflet", "xarray"]
recommended = ["notebook (>=5.4)", "holoviews (>1.14.1)", "matplotlib (<3.4)", "pillow", "plotly"]
tests = ["flake8", "parameterized", "pytest", "scipy", "nbsmoke (>=0.2.0)", "pytest-cov", "codecov", "folium", "ipympl", "twine", "pandas (>=1.3)", "ipython (>=7.0)", "holoviews"]

[[package]]
name = "param"
version = "1.12.2"
description = "Make your Python code clearer and more reliable by declaring Parameters."
category = "main"
optional = false
python-versions = ">=2.7"

[package.extras]
all = ["aiohttp", "flake8", "graphviz", "jinja2 (<3.1)", "myst-parser", "myst-nb (==0.12.2)", "nbconvert", "nbsite (>=0.7.1)", "pandas", "panel", "pydata-sphinx-theme (<0.9.0)", "pygraphviz", "pytest", "pytest-cov", "sphinx-copybutton"]
doc = ["pygraphviz", "nbsite (>=0.7.1)", "pydata-sphinx-theme (<0.9.0)", "jinja2 (<3.1)", "myst-parser", "nbconvert", "graphviz", "myst-nb (==0.12.2)", "sphinx-copybutton", "aiohttp", "panel", "pandas"]
tests = ["pytest", "pytest-cov", "flake8"]

[[package]]
name = "paramiko"
version = "2.11.0"
description = "SSH2 protocol library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
bcrypt = ">=3.1.3"
cryptography = ">=2.5"
pynacl = ">=1.0.1"
six = "*"

[package.extras]
all = ["pyasn1 (>=0.1.7)", "pynacl (>=1.0.1)", "bcrypt (>=3.1.3)", "invoke (>=1.3)", "gssapi (>=1.4.1)", "pywin32 (>=2.1.8)"]
ed25519 = ["pynacl (>=1.0.1)", "bcrypt (>=3.1.3)"]
gssapi = ["pyasn1 (>=0.1.7)", "gssapi (>=1.4.1)", "pywin32 (>=2.1.8)"]
invoke = ["invoke (>=1.3)"]

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["docopt", "pytest (<6.0.0)"]

[[package]]
name = "pathos"
version = "0.2.9"
description = "parallel graph management and execution in heterogeneous computing"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.dependencies]
dill = ">=0.3.5.1"
multiprocess = ">=0.70.13"
pox = ">=0.3.1"
ppft = ">=1.7.6.5"

[[package]]
name = "pathspec"
version = "0.9.0"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "patsy"
version = "0.5.2"
description = "A Python package for describing statistical models and for building design matrices."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.4"
six = "*"

[package.extras]
test = ["pytest", "pytest-cov", "scipy"]

[[package]]
name = "pbr"
version = "5.9.0"
description = "Python Build Reasonableness"
category = "main"
optional = false
python-versions = ">=2.6"

[[package]]
name = "pexpect"
version = "4.8.0"
description = "Pexpect allows easy control of interactive console applications."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "phik"
version = "0.12.2"
description = "Phi_K correlation analyzer library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
joblib = ">=0.14.1"
matplotlib = ">=2.2.3"
numpy = ">=1.18.0"
pandas = ">=0.25.1"
scipy = ">=1.5.2"

[package.extras]
test = ["pytest (>=4.0.2)", "pytest-pylint (>=0.13.0)", "nbconvert (>=5.3.1)", "jupyter-client (>=5.2.3)"]

[[package]]
name = "pickleshare"
version = "0.7.5"
description = "Tiny 'shelve'-like database with concurrency support"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pillow"
version = "9.2.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "plac"
version = "1.1.3"
description = "The smartest command line arguments parser in the world"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "platformdirs"
version = "2.5.2"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2021.7.5b38)", "proselint (>=0.10.2)", "sphinx-autodoc-typehints (>=1.12)", "sphinx (>=4)"]
test = ["appdirs (==1.4.4)", "pytest-cov (>=2.7)", "pytest-mock (>=3.6)", "pytest (>=6)"]

[[package]]
name = "plotly"
version = "5.9.0"
description = "An open-source, interactive data visualization library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
tenacity = ">=6.2.0"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "pox"
version = "0.3.1"
description = "utilities for filesystem exploration and automated builds"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[[package]]
name = "ppft"
version = "1.7.6.5"
description = "distributed and parallel python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.dependencies]
six = ">=1.7.3"

[package.extras]
dill = ["dill (>=0.3.5)"]

[[package]]
name = "pre-commit"
version = "2.20.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
toml = "*"
virtualenv = ">=20.0.8"

[[package]]
name = "preshed"
version = "3.0.6"
description = "Cython hash table that trusts the keys are pre-hashed"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cymem = ">=2.0.2,<2.1.0"
murmurhash = ">=0.28.0,<1.1.0"

[[package]]
name = "prettytable"
version = "3.3.0"
description = "A simple Python library for easily displaying tabular data in a visually appealing ASCII table format"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
wcwidth = "*"

[package.extras]
tests = ["pytest", "pytest-cov", "pytest-lazy-fixture"]

[[package]]
name = "prometheus-client"
version = "0.14.1"
description = "Python client for the Prometheus monitoring system."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
twisted = ["twisted"]

[[package]]
name = "prometheus-flask-exporter"
version = "0.20.2"
description = "Prometheus metrics exporter for Flask"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
flask = "*"
prometheus-client = "*"

[[package]]
name = "prompt-toolkit"
version = "3.0.30"
description = "Library for building powerful interactive command lines in Python"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "protobuf"
version = "4.21.2"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "psutil"
version = "5.9.1"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["ipaddress", "mock", "enum34", "pywin32", "wmi"]

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.2"
description = "Safely evaluate AST nodes without side effects"
category = "main"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "py4j"
version = "0.10.9.5"
description = "Enables Python programs to dynamically access arbitrary Java objects"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyamg"
version = "4.2.3"
description = "PyAMG: Algebraic Multigrid Solvers in Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.7.0"
scipy = ">=0.12.0"

[[package]]
name = "pyaml"
version = "21.10.1"
description = "PyYAML-based module to produce pretty and readable YAML-serialized data"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
PyYAML = "*"

[[package]]
name = "pyarrow"
version = "8.0.0"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16.6"

[[package]]
name = "pyasn1"
version = "0.4.8"
description = "ASN.1 types and codecs"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyasn1-modules"
version = "0.2.8"
description = "A collection of ASN.1-based protocols modules."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.5.0"

[[package]]
name = "pybadges"
version = "3.0.0"
description = "A library and command-line tool for generating Github-style badges"
category = "dev"
optional = false
python-versions = ">=3.4"

[package.dependencies]
Jinja2 = ">=3,<4"
requests = ">=2.22.0,<3"

[package.extras]
dev = ["fonttools (>=3.26)", "nox", "Pillow (>=5)", "pytest (>=3.6)", "xmldiff (>=2.4)"]
pil-measurement = ["Pillow (>=6,<10)"]

[[package]]
name = "pycaret"
version = "2.3.10"
description = "PyCaret - An open source, low-code machine learning library in Python."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
autoviz = {version = "*", optional = true, markers = "extra == \"full\""}
azure-storage-blob = {version = "*", optional = true, markers = "extra == \"full\""}
Boruta = "*"
boto3 = {version = "*", optional = true, markers = "extra == \"full\""}
catboost = {version = ">=0.23.2", optional = true, markers = "extra == \"full\""}
cufflinks = ">=0.17.0"
evidently = {version = "*", optional = true, markers = "extra == \"full\""}
explainerdashboard = {version = "*", optional = true, markers = "extra == \"full\""}
fairlearn = {version = "*", optional = true, markers = "extra == \"full\""}
fastapi = {version = "*", optional = true, markers = "extra == \"full\""}
fugue = {version = ">=0.6.5", optional = true, markers = "extra == \"full\""}
gensim = "<4.0.0"
google-cloud-storage = {version = "*", optional = true, markers = "extra == \"full\""}
gradio = {version = "*", optional = true, markers = "extra == \"full\""}
hyperopt = {version = "*", optional = true, markers = "extra == \"full\""}
imbalanced-learn = "0.7.0"
interpret = {version = "<=0.2.4", optional = true, markers = "extra == \"full\""}
IPython = "*"
ipywidgets = "*"
joblib = "*"
kmodes = ">=0.10.1"
lightgbm = ">=2.3.1"
m2cgen = {version = "*", optional = true, markers = "extra == \"full\""}
matplotlib = "*"
mlflow = "*"
mlxtend = ">=0.17.0"
nltk = "*"
numba = "<0.55"
optuna = {version = ">=2.2.0", optional = true, markers = "extra == \"full\""}
pandas = "*"
pandas-profiling = ">=2.8.0"
plotly = ">=4.4.1"
psutil = {version = "*", optional = true, markers = "extra == \"full\""}
pyLDAvis = "*"
pyod = "*"
pyyaml = "<6.0.0"
ray = {version = ">=1.0.0", extras = ["tune"], optional = true, markers = "extra == \"full\""}
scikit-learn = "0.23.2"
scikit-optimize = {version = ">=0.8.1", optional = true, markers = "extra == \"full\""}
scikit-plot = "*"
scipy = "<=1.5.4"
seaborn = "*"
shap = {version = "*", optional = true, markers = "extra == \"full\""}
spacy = "<2.4.0"
textblob = "*"
tune-sklearn = {version = ">=0.2.1", optional = true, markers = "extra == \"full\""}
umap-learn = "*"
uvicorn = {version = "*", optional = true, markers = "extra == \"full\""}
wordcloud = "*"
xgboost = {version = ">=1.1.0", optional = true, markers = "extra == \"full\""}
yellowbrick = ">=1.0.1"

[package.extras]
full = ["shap", "interpret (<=0.2.4)", "tune-sklearn (>=0.2.1)", "ray[tune] (>=1.0.0)", "hyperopt", "optuna (>=2.2.0)", "scikit-optimize (>=0.8.1)", "psutil", "catboost (>=0.23.2)", "xgboost (>=1.1.0)", "explainerdashboard", "m2cgen", "evidently", "autoviz", "fairlearn", "fastapi", "uvicorn", "gradio", "fugue (>=0.6.5)", "boto3", "azure-storage-blob", "google-cloud-storage"]
test = ["pytest", "moto", "codecov", "dask", "shap", "interpret (<=0.2.4)", "tune-sklearn (>=0.2.1)", "ray[tune] (>=1.0.0)", "hyperopt", "optuna (>=2.2.0)", "scikit-optimize (>=0.8.1)", "psutil", "catboost (>=0.23.2)", "xgboost (>=1.1.0)", "explainerdashboard", "m2cgen", "evidently", "autoviz", "fairlearn", "fastapi", "uvicorn", "gradio", "fugue (>=0.6.5)", "boto3", "azure-storage-blob", "google-cloud-storage"]

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pycryptodome"
version = "3.15.0"
description = "Cryptographic library for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pyct"
version = "0.4.8"
description = "Python package common tasks for users (e.g. copy examples, fetch data, ...)"
category = "main"
optional = false
python-versions = ">=2.7"

[package.dependencies]
param = ">=1.7.0"

[package.extras]
build = ["setuptools", "param (>=1.7.0)"]
cmd = ["pyyaml", "requests"]
doc = ["nbsite", "sphinx-ioam-theme"]
tests = ["flake8", "pytest"]

[[package]]
name = "pydantic"
version = "1.9.1"
description = "Data validation and settings management using python type hints"
category = "main"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
typing-extensions = ">=3.7.4.3"

[package.extras]
dotenv = ["python-dotenv (>=0.10.4)"]
email = ["email-validator (>=1.0.3)"]

[[package]]
name = "pydocstyle"
version = "6.1.1"
description = "Python docstring style checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
snowballstemmer = "*"

[package.extras]
toml = ["toml"]

[[package]]
name = "pydub"
version = "0.25.1"
description = "Manipulate audio with an simple and easy high level interface"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pygments"
version = "2.12.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyjwt"
version = "2.4.0"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
crypto = ["cryptography (>=3.3.1)"]
dev = ["sphinx", "sphinx-rtd-theme", "zope.interface", "cryptography (>=3.3.1)", "pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)", "mypy", "pre-commit"]
docs = ["sphinx", "sphinx-rtd-theme", "zope.interface"]
tests = ["pytest (>=6.0.0,<7.0.0)", "coverage[toml] (==5.0.4)"]

[[package]]
name = "pyldavis"
version = "3.3.1"
description = "Interactive topic model visualization. Port of the R package."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
funcy = "*"
future = "*"
gensim = "*"
jinja2 = "*"
joblib = "*"
numexpr = "*"
numpy = ">=1.20.0"
pandas = ">=1.2.0"
scikit-learn = "*"
scipy = "*"
sklearn = "*"

[[package]]
name = "pylint"
version = "2.14.4"
description = "python code static checker"
category = "dev"
optional = false
python-versions = ">=3.7.2"

[package.dependencies]
astroid = ">=2.11.6,<=2.12.0-dev0"
colorama = {version = ">=0.4.5", markers = "sys_platform == \"win32\""}
dill = ">=0.2"
isort = ">=4.2.5,<6"
mccabe = ">=0.6,<0.8"
platformdirs = ">=2.2.0"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
tomlkit = ">=0.10.1"
typing-extensions = {version = ">=3.10.0", markers = "python_version < \"3.10\""}

[package.extras]
spelling = ["pyenchant (>=3.2,<4.0)"]
testutils = ["gitpython (>3)"]

[[package]]
name = "pynacl"
version = "1.5.0"
description = "Python binding to the Networking and Cryptography (NaCl) library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.4.1"

[package.extras]
docs = ["sphinx (>=1.6.5)", "sphinx-rtd-theme"]
tests = ["pytest (>=3.2.1,!=3.3.0)", "hypothesis (>=3.27.0)"]

[[package]]
name = "pynndescent"
version = "0.5.7"
description = "Nearest Neighbor Descent"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = ">=0.11"
llvmlite = ">=0.30"
numba = ">=0.51.2"
scikit-learn = ">=0.18"
scipy = ">=1.0"

[[package]]
name = "pyod"
version = "1.0.3"
description = "A Comprehensive and Scalable Python Library for Outlier Detection (Anomaly Detection)"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = "*"
matplotlib = "*"
numba = ">=0.51"
numpy = ">=1.19"
scikit_learn = ">=0.20.0"
scipy = ">=1.5.1"
six = "*"
statsmodels = "*"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyperclip"
version = "1.8.2"
description = "A cross-platform clipboard module for Python. (Only handles plain text for now.)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyreadline3"
version = "3.4.1"
description = "A python implementation of GNU readline."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyrsistent"
version = "0.18.1"
description = "Persistent/Functional/Immutable data structures"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pytest"
version = "6.2.5"
description = "pytest: simple powerful testing with Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
toml = "*"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
name = "pytest-cov"
version = "3.0.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests", "six", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytest-html"
version = "3.1.1"
description = "pytest plugin for generating HTML reports"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pytest = ">=5.0,<6.0.0 || >6.0.0"
pytest-metadata = "*"

[[package]]
name = "pytest-metadata"
version = "2.0.2"
description = "pytest plugin for test session metadata"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
pytest = ">=3.0.0,<8.0.0"

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-multipart"
version = "0.0.5"
description = "A streaming multipart parser for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.4.0"

[[package]]
name = "pytz"
version = "2022.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyupgrade"
version = "2.37.1"
description = "A tool to automatically upgrade syntax for newer versions."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tokenize-rt = ">=3.2.0"

[[package]]
name = "pyviz-comms"
version = "2.2.0"
description = "Bidirectional communication for the HoloViz ecosystem."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
param = "*"

[package.extras]
tests = ["nose", "flake8"]
build = ["keyring", "rfc3986", "twine", "jupyter-packaging (>=0.7.9,<0.8.0)", "jupyterlab (>=3.0,<4.0)", "setuptools (>=40.8.0,<61)"]
all = ["twine", "setuptools (>=40.8.0,<61)", "rfc3986", "nose", "keyring", "jupyterlab (>=3.0,<4.0)", "jupyter-packaging (>=0.7.9,<0.8.0)", "flake8"]

[[package]]
name = "pywavelets"
version = "1.3.0"
description = "PyWavelets, wavelet transform module"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17.3"

[[package]]
name = "pywin32"
version = "227"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywinpty"
version = "2.0.6"
description = "Pseudo terminal support for Windows from Python."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pyyaml"
version = "5.4.1"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[[package]]
name = "pyzmq"
version = "23.2.0"
description = "Python bindings for 0MQ"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = {version = "*", markers = "implementation_name == \"pypy\""}
py = {version = "*", markers = "implementation_name == \"pypy\""}

[[package]]
name = "qpd"
version = "0.3.3"
description = "Query Pandas Using SQL"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
adagio = "*"
antlr4-python3-runtime = ">=4.10"
pandas = ">=1.0.2"
sqlalchemy = "*"
triad = "*"

[package.extras]
ray = ["modin[ray] (>=0.8.1.1)", "pandas (>=1.1.2)"]
dask = ["cloudpickle (>=1.4.0)", "dask"]
all = ["modin", "cloudpickle (>=1.4.0)", "dask"]

[[package]]
name = "qtconsole"
version = "5.3.1"
description = "Jupyter Qt console"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
ipykernel = ">=4.1"
ipython-genutils = "*"
jupyter-client = ">=4.1"
jupyter-core = "*"
pygments = "*"
pyzmq = ">=17.1"
qtpy = ">=2.0.1"
traitlets = "<5.2.1 || >5.2.1,<5.2.2 || >5.2.2"

[package.extras]
doc = ["Sphinx (>=1.3)"]
test = ["flaky", "pytest", "pytest-qt"]

[[package]]
name = "qtpy"
version = "2.1.0"
description = "Provides an abstraction layer on top of the various Qt bindings (PyQt5/6 and PySide2/6)."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = "*"

[package.extras]
test = ["pytest-qt", "pytest-cov (>=3.0.0)", "pytest (>=6,!=7.0.0,!=7.0.1)"]

[[package]]
name = "querystring-parser"
version = "1.2.4"
description = "QueryString parser for Python/Django that correctly handles nested dictionaries"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "radon"
version = "5.1.0"
description = "Code Metrics in Python"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
colorama = {version = ">=0.4.1", markers = "python_version > \"3.4\""}
future = "*"
mando = ">=0.6,<0.7"

[[package]]
name = "ray"
version = "1.12.1"
description = "Ray provides a simple, universal API for building distributed applications."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
aiosignal = "*"
attrs = "*"
click = ">=7.0"
filelock = "*"
frozenlist = "*"
grpcio = ">=1.28.1,<=1.43.0"
jsonschema = "*"
msgpack = ">=1.0.0,<2.0.0"
numpy = [
    {version = ">=1.16", markers = "python_version < \"3.9\""},
    {version = ">=1.19.3", markers = "python_version >= \"3.9\""},
]
pandas = {version = "*", optional = true, markers = "extra == \"tune\""}
protobuf = ">=3.15.3"
pyyaml = "*"
requests = "*"
tabulate = {version = "*", optional = true, markers = "extra == \"tune\""}
tensorboardX = {version = ">=1.9", optional = true, markers = "extra == \"tune\""}
virtualenv = "*"

[package.extras]
all = ["tabulate", "gpustat (>=1.0.0b1)", "aiohttp-cors", "ray-cpp (==1.12.1)", "fastapi", "pyyaml", "aiorwlock", "smart-open", "prometheus-client (>=0.7.1,<0.14.0)", "kubernetes", "tensorboardX (>=1.9)", "lz4", "py-spy (>=0.2.0)", "pyarrow (>=4.0.1,<7.0.0)", "gym (<0.22)", "numpy (>=1.19)", "opentelemetry-sdk (==1.1.0)", "opentelemetry-api (==1.1.0)", "fsspec", "pandas", "scipy", "aiohttp (>=3.7)", "opentelemetry-exporter-otlp (==1.1.0)", "starlette", "uvicorn (==0.16.0)", "urllib3", "dm-tree", "scikit-image", "matplotlib (!=3.4.3)", "colorful", "requests", "opencensus"]
cpp = ["ray-cpp (==1.12.1)"]
data = ["pandas", "pyarrow (>=4.0.1,<7.0.0)", "fsspec", "numpy (>=1.19)"]
default = ["aiohttp (>=3.7)", "aiohttp-cors", "colorful", "py-spy (>=0.2.0)", "requests", "gpustat (>=1.0.0b1)", "opencensus", "prometheus-client (>=0.7.1,<0.14.0)", "smart-open"]
k8s = ["kubernetes", "urllib3"]
observability = ["opentelemetry-api (==1.1.0)", "opentelemetry-sdk (==1.1.0)", "opentelemetry-exporter-otlp (==1.1.0)"]
rllib = ["pandas", "tabulate", "tensorboardX (>=1.9)", "requests", "dm-tree", "gym (<0.22)", "lz4", "matplotlib (!=3.4.3)", "scikit-image", "pyyaml", "scipy"]
serve = ["gpustat (>=1.0.0b1)", "aiohttp (>=3.7)", "aiohttp-cors", "starlette", "uvicorn (==0.16.0)", "aiorwlock", "py-spy (>=0.2.0)", "smart-open", "colorful", "requests", "prometheus-client (>=0.7.1,<0.14.0)", "opencensus", "fastapi"]
tune = ["pandas", "tabulate", "tensorboardX (>=1.9)", "requests"]

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-oauthlib"
version = "1.3.1"
description = "OAuthlib authentication support for Requests."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
oauthlib = ">=3.0.0"
requests = ">=2.0.0"

[package.extras]
rsa = ["oauthlib[signedtoken] (>=3.0.0)"]

[[package]]
name = "retrying"
version = "1.3.3"
description = "Retrying"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.7.0"

[[package]]
name = "rfc3986"
version = "1.5.0"
description = "Validating URI References per RFC 3986"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
idna = {version = "*", optional = true, markers = "extra == \"idna2008\""}

[package.extras]
idna2008 = ["idna"]

[[package]]
name = "rsa"
version = "4.9"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = ">=3.6,<4"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "s3transfer"
version = "0.6.0"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "safety"
version = "1.10.3"
description = "Checks installed dependencies for known vulnerabilities."
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
Click = ">=6.0"
dparse = ">=0.5.1"
packaging = "*"
requests = "*"

[[package]]
name = "salib"
version = "1.4.5"
description = "Tools for sensitivity analysis. Contains Sobol, Morris, and FAST methods"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
matplotlib = "*"
numpy = "*"
pandas = "*"
pathos = "*"
scipy = "*"

[package.extras]
gurobipy = ["gurobipy"]
testing = ["pytest", "pytest-cov"]

[[package]]
name = "scikit-image"
version = "0.19.3"
description = "Image processing in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
imageio = ">=2.4.1"
networkx = ">=2.2"
numpy = ">=1.17.0"
packaging = ">=20.0"
pillow = ">=6.1.0,<7.1.0 || >7.1.0,<7.1.1 || >7.1.1,<8.3.0 || >8.3.0"
PyWavelets = ">=1.1.1"
scipy = ">=1.4.1"
tifffile = ">=2019.7.26"

[package.extras]
data = ["pooch (>=1.3.0)"]
docs = ["sphinx (>=1.8)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.0)", "sphinx-copybutton", "pytest-runner", "scikit-learn", "matplotlib (>=3.3)", "dask[array] (>=0.15.0,!=2.17.0)", "cloudpickle (>=0.2.1)", "pandas (>=0.23.0)", "seaborn (>=0.7.1)", "pooch (>=1.3.0)", "tifffile (>=2020.5.30)", "myst-parser", "ipywidgets", "plotly (>=4.14.0)", "kaleido"]
optional = ["simpleitk", "astropy (>=3.1.2)", "cloudpickle (>=0.2.1)", "dask[array] (>=1.0.0,!=2.17.0)", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pyamg", "qtpy"]
test = ["asv", "codecov", "flake8", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pytest (>=5.2.0)", "pytest-cov (>=2.7.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scikit-learn"
version = "0.23.2"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
joblib = ">=0.11"
numpy = ">=1.13.3"
scipy = ">=0.19.1"
threadpoolctl = ">=2.0.0"

[package.extras]
alldeps = ["numpy (>=1.13.3)", "scipy (>=0.19.1)"]

[[package]]
name = "scikit-optimize"
version = "0.9.0"
description = "Sequential model-based optimization toolbox."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = ">=0.11"
numpy = ">=1.13.3"
pyaml = ">=16.9"
scikit-learn = ">=0.20.0"
scipy = ">=0.19.1"

[package.extras]
plots = ["matplotlib (>=2.0.0)"]

[[package]]
name = "scikit-plot"
version = "0.3.7"
description = "An intuitive library to add plotting functionality to scikit-learn objects."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
joblib = ">=0.10"
matplotlib = ">=1.4.0"
scikit-learn = ">=0.18"
scipy = ">=0.9"

[package.extras]
testing = ["pytest"]

[[package]]
name = "scipy"
version = "1.5.4"
description = "SciPy: Scientific Library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.14.5"

[[package]]
name = "seaborn"
version = "0.11.2"
description = "seaborn: statistical data visualization"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
matplotlib = ">=2.2"
numpy = ">=1.15"
pandas = ">=0.23"
scipy = ">=1.0"

[[package]]
name = "send2trash"
version = "1.8.0"
description = "Send file to trash natively under Mac OS X, Windows and Linux."
category = "main"
optional = false
python-versions = "*"

[package.extras]
nativelib = ["pyobjc-framework-cocoa", "pywin32"]
objc = ["pyobjc-framework-cocoa"]
win32 = ["pywin32"]

[[package]]
name = "setuptools-scm"
version = "7.0.5"
description = "the blessed package to manage your versions by scm tags"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=20.0"
tomli = ">=1.0.0"
typing-extensions = "*"

[package.extras]
test = ["pytest (>=6.2)", "virtualenv (>20)"]
toml = ["setuptools (>=42)"]

[[package]]
name = "shap"
version = "0.41.0"
description = "A unified approach to explain the output of any machine learning model."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cloudpickle = "*"
numba = "*"
numpy = "*"
packaging = ">20.9"
pandas = "*"
scikit-learn = "*"
scipy = "*"
slicer = "0.0.7"
tqdm = ">4.25.0"

[package.extras]
all = ["transformers", "ipython", "lime", "pyod", "pyspark", "sphinx-rtd-theme", "pytest-mpl", "nbsphinx", "pytest", "opencv-python", "numpydoc", "xgboost", "torch", "sentencepiece", "matplotlib", "pytest-cov", "catboost", "lightgbm", "sphinx"]
docs = ["matplotlib", "ipython", "numpydoc", "sphinx-rtd-theme", "sphinx", "nbsphinx"]
others = ["lime"]
plots = ["matplotlib", "ipython"]
test = ["pytest", "pytest-mpl", "pytest-cov", "xgboost", "lightgbm", "catboost", "pyspark", "pyod", "transformers", "torch", "sentencepiece", "opencv-python"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "sklearn"
version = "0.0"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
scikit-learn = "*"

[[package]]
name = "skope-rules"
version = "1.0.1"
description = "Machine Learning with Interpretable Rules"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.10.4"
pandas = ">=0.18.1"
scikit-learn = ">=0.17.1"
scipy = ">=0.17.0"

[[package]]
name = "slicer"
version = "0.0.7"
description = "A small package for big slicing."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "smart-open"
version = "6.0.0"
description = "Utils for streaming large files (S3, HDFS, GCS, Azure Blob Storage, gzip, bz2...)"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.extras]
all = ["boto3", "google-cloud-storage (>=1.31.0)", "azure-storage-blob", "azure-common", "azure-core", "requests"]
azure = ["azure-storage-blob", "azure-common", "azure-core"]
gcs = ["google-cloud-storage (>=1.31.0)"]
http = ["requests"]
s3 = ["boto3"]
test = ["boto3", "google-cloud-storage (>=1.31.0)", "azure-storage-blob", "azure-common", "azure-core", "requests", "moto", "pathlib2", "responses", "paramiko", "pytest", "pytest-rerunfailures"]
webhdfs = ["requests"]

[[package]]
name = "smmap"
version = "5.0.0"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "sniffio"
version = "1.2.0"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "snowballstemmer"
version = "2.2.0"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "spacy"
version = "2.3.7"
description = "Industrial-strength Natural Language Processing (NLP) in Python"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
blis = ">=0.4.0,<0.8.0"
catalogue = ">=0.0.7,<1.1.0"
cymem = ">=2.0.2,<2.1.0"
murmurhash = ">=0.28.0,<1.1.0"
numpy = ">=1.15.0"
plac = ">=0.9.6,<1.2.0"
preshed = ">=3.0.2,<3.1.0"
requests = ">=2.13.0,<3.0.0"
srsly = ">=1.0.2,<1.1.0"
thinc = ">=7.4.1,<7.5.0"
tqdm = ">=4.38.0,<5.0.0"
wasabi = ">=0.4.0,<1.1.0"

[package.extras]
cuda = ["cupy (>=5.0.0b4)"]
cuda100 = ["cupy-cuda100 (>=5.0.0b4)"]
cuda101 = ["cupy-cuda101 (>=5.0.0b4)"]
cuda102 = ["cupy-cuda102 (>=5.0.0b4)"]
cuda110 = ["cupy-cuda110 (>=5.0.0b4)"]
cuda111 = ["cupy-cuda111 (>=5.0.0b4)"]
cuda80 = ["cupy-cuda80 (>=5.0.0b4)"]
cuda90 = ["cupy-cuda90 (>=5.0.0b4)"]
cuda91 = ["cupy-cuda91 (>=5.0.0b4)"]
cuda92 = ["cupy-cuda92 (>=5.0.0b4)"]
ja = ["sudachipy (>=0.4.5)", "sudachidict-core (>=20200330)"]
ko = ["natto-py (==0.9.0)"]
lookups = ["spacy-lookups-data (>=0.3.2,<0.4.0)"]
th = ["pythainlp (>=2.0)"]

[[package]]
name = "sqlalchemy"
version = "1.4.39"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}

[package.extras]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql"]
aiosqlite = ["typing_extensions (!=3.10.0.1)", "greenlet (!=0.4.17)", "aiosqlite"]
asyncio = ["greenlet (!=0.4.17)"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4)"]
mariadb_connector = ["mariadb (>=1.0.1)"]
mssql = ["pyodbc"]
mssql_pymssql = ["pymssql"]
mssql_pyodbc = ["pyodbc"]
mypy = ["sqlalchemy2-stubs", "mypy (>=0.910)"]
mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
mysql_connector = ["mysql-connector-python"]
oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql_asyncpg = ["greenlet (!=0.4.17)", "asyncpg"]
postgresql_pg8000 = ["pg8000 (>=1.16.6,!=1.29.0)"]
postgresql_psycopg2binary = ["psycopg2-binary"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql (<1)", "pymysql"]
sqlcipher = ["sqlcipher3-binary"]

[[package]]
name = "sqlparse"
version = "0.4.2"
description = "A non-validating SQL parser."
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "srsly"
version = "1.0.5"
description = "Modern high-performance serialization utilities for Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "stack-data"
version = "0.3.0"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = "*"
executing = "*"
pure-eval = "*"

[package.extras]
tests = ["pytest", "typeguard", "pygments", "littleutils", "cython"]

[[package]]
name = "starlette"
version = "0.19.1"
description = "The little ASGI library that shines."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
anyio = ">=3.4.0,<5"
typing-extensions = {version = ">=3.10.0", markers = "python_version < \"3.10\""}

[package.extras]
full = ["itsdangerous", "jinja2", "python-multipart", "pyyaml", "requests"]

[[package]]
name = "statsmodels"
version = "0.13.2"
description = "Statistical computations and models for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17"
packaging = ">=21.3"
pandas = ">=0.25"
patsy = ">=0.5.2"
scipy = ">=1.3"

[package.extras]
build = ["cython (>=0.29.26)"]
develop = ["cython (>=0.29.26)"]
docs = ["sphinx", "nbconvert", "jupyter-client", "ipykernel", "matplotlib", "nbformat", "numpydoc", "pandas-datareader"]

[[package]]
name = "stevedore"
version = "4.0.0"
description = "Manage dynamic plugins for Python applications"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pbr = ">=2.0.0,<2.1.0 || >2.1.0"

[[package]]
name = "tabulate"
version = "0.8.10"
description = "Pretty-print tabular data"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
widechars = ["wcwidth"]

[[package]]
name = "tangled-up-in-unicode"
version = "0.2.0"
description = "Access to the Unicode Character Database (UCD)"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tenacity"
version = "8.0.1"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
doc = ["reno", "sphinx", "tornado (>=4.5)"]

[[package]]
name = "tensorboardx"
version = "2.5"
description = "TensorBoardX lets you watch Tensors Flow without Tensorflow"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
protobuf = ">=3.8.0"
six = "*"

[[package]]
name = "terminado"
version = "0.15.0"
description = "Tornado websocket backend for the Xterm.js Javascript terminal emulator library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ptyprocess = {version = "*", markers = "os_name != \"nt\""}
pywinpty = {version = ">=1.1.0", markers = "os_name == \"nt\""}
tornado = ">=6.1.0"

[package.extras]
test = ["pre-commit", "pytest-timeout", "pytest (>=6.0)"]

[[package]]
name = "textblob"
version = "0.17.1"
description = "Simple, Pythonic text processing. Sentiment analysis, part-of-speech tagging, noun phrase parsing, and more."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
nltk = {version = ">=3.1", markers = "python_version >= \"3\""}

[[package]]
name = "thinc"
version = "7.4.5"
description = "Practical Machine Learning for NLP"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
blis = ">=0.4.0,<0.8.0"
catalogue = ">=0.0.7,<1.1.0"
cymem = ">=2.0.2,<2.1.0"
murmurhash = ">=0.28.0,<1.1.0"
numpy = ">=1.15.0"
plac = ">=0.9.6,<1.2.0"
preshed = ">=1.0.1,<3.1.0"
srsly = ">=0.0.6,<1.1.0"
tqdm = ">=4.10.0,<5.0.0"
wasabi = ">=0.0.9,<1.1.0"

[package.extras]
cuda = ["cupy (>=5.0.0b4)"]
cuda100 = ["cupy-cuda100 (>=5.0.0b4)"]
cuda101 = ["cupy-cuda101 (>=5.0.0b4)"]
cuda102 = ["cupy-cuda102 (>=5.0.0b4)"]
cuda110 = ["cupy-cuda110 (>=5.0.0b4)"]
cuda111 = ["cupy-cuda111 (>=5.0.0b4)"]
cuda80 = ["cupy-cuda80 (>=5.0.0b4)"]
cuda90 = ["cupy-cuda90 (>=5.0.0b4)"]
cuda91 = ["cupy-cuda91 (>=5.0.0b4)"]
cuda92 = ["cupy-cuda92 (>=5.0.0b4)"]

[[package]]
name = "threadpoolctl"
version = "3.1.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tifffile"
version = "2022.5.4"
description = "Read and write TIFF files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.19.2"

[package.extras]
all = ["imagecodecs (>=2021.11.20)", "matplotlib (>=3.3)", "lxml"]

[[package]]
name = "tinycss2"
version = "1.1.1"
description = "A tiny CSS parser"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
webencodings = ">=0.4"

[package.extras]
doc = ["sphinx", "sphinx-rtd-theme"]
test = ["pytest", "pytest-cov", "pytest-flake8", "pytest-isort", "coverage"]

[[package]]
name = "tokenize-rt"
version = "4.2.1"
description = "A wrapper around the stdlib `tokenize` which roundtrips."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tomlkit"
version = "0.11.1"
description = "Style preserving TOML library"
category = "dev"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "tornado"
version = "6.2"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "main"
optional = false
python-versions = ">= 3.7"

[[package]]
name = "tqdm"
version = "4.64.0"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "traitlets"
version = "5.3.0"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pre-commit", "pytest"]

[[package]]
name = "treeinterpreter"
version = "0.2.3"
description = "Package for interpreting scikit-learn's decision tree and random forest predictions."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "triad"
version = "0.6.6"
description = "A collection of python utils for Fugue projects"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
fs = "*"
pandas = "*"
pyarrow = "*"
six = "*"

[package.extras]
ciso8601 = ["ciso8601"]

[[package]]
name = "tune-sklearn"
version = "0.4.3"
description = "A drop-in replacement for Scikit-Learn's GridSearchCV / RandomizedSearchCV with cutting edge hyperparameter tuning techniques."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.16"
ray = {version = "*", extras = ["tune"]}
scikit-learn = "*"
scipy = "*"

[[package]]
name = "typing-extensions"
version = "4.3.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "ua-parser"
version = "0.15.0"
description = "Python port of Browserscope's user agent parser"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "uc-micro-py"
version = "1.0.1"
description = "Micro subset of unicode data files for linkify-it-py projects."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
test = ["pytest-cov", "pytest", "coverage"]

[[package]]
name = "umap-learn"
version = "0.5.3"
description = "Uniform Manifold Approximation and Projection"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numba = ">=0.49"
numpy = ">=1.17"
pynndescent = ">=0.5"
scikit-learn = ">=0.22"
scipy = ">=1.0"
tqdm = "*"

[package.extras]
parametric_umap = ["tensorflow (>=2.1)", "tensorflow-probability (>=0.10)"]
plot = ["pandas", "matplotlib", "datashader", "bokeh", "holoviews", "colorcet", "seaborn", "scikit-image"]

[[package]]
name = "urllib3"
version = "1.26.10"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "uvicorn"
version = "0.18.2"
description = "The lightning-fast ASGI server."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=7.0"
h11 = ">=0.8"

[package.extras]
standard = ["websockets (>=10.0)", "httptools (>=0.4.0)", "watchfiles (>=0.13)", "python-dotenv (>=0.13)", "PyYAML (>=5.1)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1)", "colorama (>=0.4)"]

[[package]]
name = "virtualenv"
version = "20.15.1"
description = "Virtual Python Environment builder"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
distlib = ">=0.3.1,<1"
filelock = ">=3.2,<4"
platformdirs = ">=2,<3"
six = ">=1.9.0,<2"

[package.extras]
docs = ["proselint (>=0.10.2)", "sphinx (>=3)", "sphinx-argparse (>=0.2.5)", "sphinx-rtd-theme (>=0.4.3)", "towncrier (>=21.3)"]
testing = ["coverage (>=4)", "coverage-enable-subprocess (>=1)", "flaky (>=3)", "pytest (>=4)", "pytest-env (>=0.6.2)", "pytest-freezegun (>=0.4.1)", "pytest-mock (>=2)", "pytest-randomly (>=1)", "pytest-timeout (>=1)", "packaging (>=20.0)"]

[[package]]
name = "visions"
version = "0.7.4"
description = "Visions"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
attrs = ">=19.3.0"
imagehash = {version = "*", optional = true, markers = "extra == \"type_image_path\""}
multimethod = ">=1.4"
networkx = ">=2.4"
numpy = "*"
pandas = ">=0.25.3"
Pillow = {version = "*", optional = true, markers = "extra == \"type_image_path\""}
tangled-up-in-unicode = ">=0.0.4"

[package.extras]
all = ["numpy", "pandas (>=0.25.3)", "attrs (>=19.3.0)", "networkx (>=2.4)", "tangled-up-in-unicode (>=0.0.4)", "multimethod (>=1.4)", "shapely", "imagehash", "pillow", "pydot", "pygraphviz", "matplotlib"]
dev = ["setuptools (>=46.1.3)", "wheel (>=0.34.2)", "black (>=20.8b1)", "isort (>=5.0.9)", "mypy (>=0.770)", "recommonmark (>=0.6.0)", "nbsphinx", "sphinx-rtd-theme (>=0.4.3)", "sphinx-autodoc-typehints (>=1.10.3)", "ipython", "sphinx-copybutton"]
plotting = ["pydot", "pygraphviz", "matplotlib"]
test = ["matplotlib", "imagehash", "pillow", "shapely", "mypy (>=0.800)", "black (>=19.10b0)", "isort (>=5.0.9)", "big-o (>=0.10.1)", "twine (>=3.1.1)", "pydot", "pytest (>=5.2.0)", "check-manifest (>=0.41)", "pandas", "pre-commit", "pytest-spark (>=0.6.0)", "pyarrow (>=1.0.1)"]
type_geometry = ["shapely"]
type_image_path = ["imagehash", "pillow"]

[[package]]
name = "waitress"
version = "2.1.2"
description = "Waitress WSGI server"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.9)"]
testing = ["pytest", "pytest-cover", "coverage (>=5.0)"]

[[package]]
name = "wasabi"
version = "0.9.1"
description = "A lightweight console printing and formatting toolkit"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "wcwidth"
version = "0.2.5"
description = "Measures the displayed width of unicode strings in a terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "webencodings"
version = "0.5.1"
description = "Character encoding aliases for legacy web content"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "websocket-client"
version = "1.3.3"
description = "WebSocket client for Python with low level API options"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["Sphinx (>=3.4)", "sphinx-rtd-theme (>=0.5)"]
optional = ["python-socks", "wsaccel"]
test = ["websockets"]

[[package]]
name = "werkzeug"
version = "2.1.2"
description = "The comprehensive WSGI web application library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
watchdog = ["watchdog"]

[[package]]
name = "widgetsnbextension"
version = "3.6.1"
description = "IPython HTML widgets for Jupyter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
notebook = ">=4.4.1"

[[package]]
name = "wordcloud"
version = "1.8.2.2"
description = "A little word cloud generator"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
matplotlib = "*"
numpy = ">=1.6.1"
pillow = "*"

[[package]]
name = "wrapt"
version = "1.14.1"
description = "Module for decorators, wrappers and monkey patching."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "wtforms"
version = "3.0.1"
description = "Form validation and rendering for Python web development."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = "*"

[package.extras]
email = ["email-validator"]

[[package]]
name = "xgboost"
version = "1.6.1"
description = "XGBoost Python Package"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
scipy = "*"

[package.extras]
dask = ["dask", "pandas", "distributed"]
datatable = ["datatable"]
pandas = ["pandas"]
plotting = ["graphviz", "matplotlib"]
scikit-learn = ["scikit-learn"]

[[package]]
name = "xlrd"
version = "2.0.1"
description = "Library for developers to extract data from Microsoft Excel (tm) .xls spreadsheet files"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.extras]
test = ["pytest-cov", "pytest"]
docs = ["sphinx"]
build = ["twine", "wheel"]

[[package]]
name = "yarl"
version = "1.7.2"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[[package]]
name = "yellowbrick"
version = "1.2.1"
description = "A suite of visual analysis and diagnostic tools for machine learning."
category = "main"
optional = false
python-versions = ">=3.4, <4"

[package.dependencies]
cycler = ">=0.10.0"
matplotlib = ">=2.0.2,<3.0.0 || >3.0.0"
numpy = ">=1.13.0"
scikit-learn = ">=0.20,<0.24"
scipy = ">=1.0.0,<1.6"

[[package]]
name = "zipp"
version = "3.8.1"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.3)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "zope.event"
version = "4.5.0"
description = "Very basic event publishing system"
category = "main"
optional = false
python-versions = "*"

[package.extras]
docs = ["sphinx"]
test = ["zope.testrunner"]

[[package]]
name = "zope.interface"
version = "5.4.0"
description = "Interfaces for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
docs = ["sphinx", "repoze.sphinx.autointerface"]
test = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]
testing = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]

[metadata]
lock-version = "1.1"
python-versions = "^3.8"
content-hash = "3853d49429b18959e23f126832aca6da59daddb0eac8ebcd8677f2cdb04d8c1e"

[metadata.files]
adagio = []
aiohttp = []
aiosignal = []
alembic = []
analytics-python = []
ansi2html = []
antlr4-python3-runtime = []
anybadge = []
anyio = []
appdirs = []
appnope = []
argon2-cffi = []
argon2-cffi-bindings = []
astroid = []
asttokens = []
async-timeout = []
atomicwrites = []
attrs = []
autopage = []
autoviz = []
azure-core = []
azure-storage-blob = []
backcall = []
backoff = []
bandit = []
bcrypt = []
beautifulsoup4 = []
black = []
bleach = []
blis = []
bokeh = []
boruta = []
boto3 = []
botocore = []
brotli = []
cachetools = []
catalogue = []
catboost = []
certifi = []
cffi = []
cfgv = []
charset-normalizer = []
chart-studio = []
click = []
cliff = []
cloudpickle = []
cmaes = []
cmd2 = []
colorama = []
colorcet = []
colorlog = []
colorlover = []
colour = []
coverage = []
coverage-badge = []
cryptography = []
cufflinks = []
cycler = []
cymem = []
cython = []
darglint = []
dash = []
dash-auth = []
dash-bootstrap-components = []
dash-core-components = []
dash-cytoscape = []
dash-html-components = []
dash-table = []
databricks-cli = []
dataclasses = []
debugpy = []
decorator = []
defusedxml = []
dill = []
distlib = []
docker = []
docstr-coverage = []
dparse = []
dtreeviz = []
emoji = []
entrypoints = []
evidently = []
executing = []
explainerdashboard = []
fairlearn = []
fastapi = []
fastjsonschema = []
ffmpy = []
filelock = []
flask = []
flask-compress = []
flask-seasurf = []
flask-simplelogin = []
flask-wtf = []
fonttools = []
frozenlist = []
fs = []
fsspec = []
fugue = []
fugue-sql-antlr = []
funcy = []
future = []
gensim = []
gevent = []
gitdb = []
gitpython = []
google-api-core = []
google-auth = []
google-cloud-core = []
google-cloud-storage = []
google-crc32c = []
google-resumable-media = []
googleapis-common-protos = []
gradio = []
graphviz = []
greenlet = []
grpcio = []
gunicorn = []
h11 = []
hazm = []
holoviews = []
htmlmin = []
httpcore = []
httpx = []
hvplot = []
hyperopt = []
identify = []
idna = []
imagehash = []
imageio = []
imbalanced-learn = []
importlib-metadata = []
importlib-resources = []
iniconfig = []
interpret = []
interpret-core = []
interrogate = []
ipykernel = []
ipython = []
ipython-genutils = []
ipywidgets = []
isodate = []
isort = []
itsdangerous = []
jedi = []
jinja2 = []
jmespath = []
joblib = []
jsonschema = []
jupyter = []
jupyter-client = []
jupyter-console = []
jupyter-core = []
jupyter-dash = []
jupyterlab-pygments = []
jupyterlab-widgets = []
kiwisolver = []
kmodes = []
lazy-object-proxy = []
libwapiti = []
lightgbm = []
lime = []
linkify-it-py = []
llvmlite = []
m2cgen = []
mako = []
mando = []
markdown = []
markdown-it-py = []
markupsafe = []
matplotlib = []
matplotlib-inline = []
mccabe = []
mdit-py-plugins = []
mdurl = []
missingno = []
mistune = []
mlflow = []
mlxtend = []
monotonic = []
msgpack = []
msrest = []
multidict = []
multimethod = []
multiprocess = []
murmurhash = []
mypy = []
mypy-extensions = []
nbclient = []
nbconvert = []
nbformat = []
nest-asyncio = []
networkx = []
nltk = []
nodeenv = []
notebook = []
numba = []
numexpr = []
numpy = []
oauthlib = []
optuna = []
orjson = []
oyaml = []
packaging = []
pandas = []
pandas-profiling = []
pandocfilters = []
panel = []
param = []
paramiko = []
parso = []
pathos = []
pathspec = []
patsy = []
pbr = []
pexpect = []
phik = []
pickleshare = []
pillow = []
plac = []
platformdirs = []
plotly = []
pluggy = []
pox = []
ppft = []
pre-commit = []
preshed = []
prettytable = []
prometheus-client = []
prometheus-flask-exporter = []
prompt-toolkit = []
protobuf = []
psutil = []
ptyprocess = []
pure-eval = []
py = []
py4j = []
pyamg = []
pyaml = []
pyarrow = []
pyasn1 = []
pyasn1-modules = []
pybadges = []
pycaret = []
pycparser = []
pycryptodome = []
pyct = []
pydantic = []
pydocstyle = []
pydub = []
pygments = []
pyjwt = []
pyldavis = []
pylint = []
pynacl = []
pynndescent = []
pyod = []
pyparsing = []
pyperclip = []
pyreadline3 = []
pyrsistent = []
pytest = []
pytest-cov = []
pytest-html = []
pytest-metadata = []
python-dateutil = []
python-multipart = []
pytz = []
pyupgrade = []
pyviz-comms = []
pywavelets = []
pywin32 = []
pywinpty = []
pyyaml = []
pyzmq = []
qpd = []
qtconsole = []
qtpy = []
querystring-parser = []
radon = []
ray = []
requests = []
requests-oauthlib = []
retrying = []
rfc3986 = []
rsa = []
s3transfer = []
safety = []
salib = []
scikit-image = []
scikit-learn = []
scikit-optimize = []
scikit-plot = []
scipy = []
seaborn = []
send2trash = []
setuptools-scm = []
shap = []
six = []
sklearn = []
skope-rules = []
slicer = []
smart-open = []
smmap = []
sniffio = []
snowballstemmer = []
soupsieve = []
spacy = []
sqlalchemy = []
sqlparse = []
srsly = []
stack-data = []
starlette = []
statsmodels = []
stevedore = []
tabulate = []
tangled-up-in-unicode = []
tenacity = []
tensorboardx = []
terminado = []
textblob = []
thinc = []
threadpoolctl = []
tifffile = []
tinycss2 = []
tokenize-rt = []
toml = []
tomli = []
tomlkit = []
tornado = []
tqdm = []
traitlets = []
treeinterpreter = []
triad = []
tune-sklearn = []
typing-extensions = []
ua-parser = []
uc-micro-py = []
umap-learn = []
urllib3 = []
uvicorn = []
virtualenv = []
visions = []
waitress = []
wasabi = []
wcwidth = []
webencodings = []
websocket-client = []
werkzeug = []
widgetsnbextension = []
wordcloud = []
wrapt = []
wtforms = []
xgboost = []
xlrd = []
yarl = []
yellowbrick = []
zipp = []
"zope.event" = []
"zope.interface" = []
